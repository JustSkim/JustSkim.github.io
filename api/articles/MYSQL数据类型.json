{"title":"MYSQL数据类型","slug":"MYSQL数据类型","date":"2021-09-05T06:24:59.886Z","updated":"2021-09-06T02:01:31.733Z","comments":true,"path":"api/articles/MYSQL数据类型.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"MYSQL数据类型\"><a href=\"#MYSQL数据类型\" class=\"headerlink\" title=\"MYSQL数据类型\"></a>MYSQL数据类型</h1><p><a href=\"https://www.runoob.com/sql/sql-datatypes.html\">菜鸟教程</a>[^1]中给出了几款主流数据库软件的数据类型</p>\n<h2 id=\"这一篇中我们着重讲MySQL-数据类型\"><a href=\"#这一篇中我们着重讲MySQL-数据类型\" class=\"headerlink\" title=\"这一篇中我们着重讲MySQL 数据类型\"></a>这一篇中我们着重讲MySQL 数据类型</h2><p>在 MySQL 中，有三种主要的类型：Text（文本）、Number（数字）和 Date/Time（日期/时间）类型。</p>\n<p><strong>Text 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CHAR(size)</td>\n<td align=\"left\">保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。</td>\n</tr>\n<tr>\n<td align=\"left\">VARCHAR(size)</td>\n<td align=\"left\">保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。<strong>注释：</strong>如果值的长度大于 255，则被转换为 TEXT 类型。</td>\n</tr>\n<tr>\n<td align=\"left\">TINYTEXT</td>\n<td align=\"left\">存放最大长度为 255 个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">TEXT</td>\n<td align=\"left\">存放最大长度为 65,535 个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">BLOB</td>\n<td align=\"left\">用于 BLOBs（Binary Large OBjects）。存放最多 65,535 字节的数据。</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMTEXT</td>\n<td align=\"left\">存放最大长度为 16,777,215 个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMBLOB</td>\n<td align=\"left\">用于 BLOBs（Binary Large OBjects）。存放最多 16,777,215 字节的数据。</td>\n</tr>\n<tr>\n<td align=\"left\">LONGTEXT</td>\n<td align=\"left\">存放最大长度为 4,294,967,295 个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">LONGBLOB</td>\n<td align=\"left\">用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。</td>\n</tr>\n<tr>\n<td align=\"left\">ENUM(x,y,z,etc.)</td>\n<td align=\"left\">允许您输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。<strong>注释：</strong>这些值是按照您输入的顺序排序的。可以按照此格式输入可能的值： ENUM(‘X’,’Y’,’Z’)</td>\n</tr>\n<tr>\n<td align=\"left\">SET</td>\n<td align=\"left\">与 ENUM 类似，不同的是，SET 最多只能包含 64 个列表项且 SET 可存储一个以上的选择。</td>\n</tr>\n</tbody></table>\n<p><strong>Number 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">TINYINT(size)</td>\n<td align=\"left\">带符号-128到127 ，无符号0到255。</td>\n</tr>\n<tr>\n<td align=\"left\">SMALLINT(size)</td>\n<td align=\"left\">带符号范围-32768到32767，无符号0到65535, size 默认为 6。</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMINT(size)</td>\n<td align=\"left\">带符号范围-8388608到8388607，无符号的范围是0到16777215。 size 默认为9</td>\n</tr>\n<tr>\n<td align=\"left\">INT(size)</td>\n<td align=\"left\">带符号范围-2147483648到2147483647，无符号的范围是0到4294967295。 size 默认为 11</td>\n</tr>\n<tr>\n<td align=\"left\">BIGINT(size)</td>\n<td align=\"left\">带符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到18446744073709551615。size 默认为 20</td>\n</tr>\n<tr>\n<td align=\"left\">FLOAT(size,d)</td>\n<td align=\"left\">带有浮动小数点的小数字。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td align=\"left\">DOUBLE(size,d)</td>\n<td align=\"left\">带有浮动小数点的大数字。在 size 参数中规显示定最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td align=\"left\">DECIMAL(size,d)</td>\n<td align=\"left\">作为字符串存储的 DOUBLE 类型，允许固定的小数点。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>注意：</strong>以上的 size 代表的并不是存储在数据库中的具体的长度，如 int(4) 并不是只能存储4个长度的数字。</p>\n<p>实际上int(size)所占多少存储空间并无任何关系。int(3)、int(4)、int(8) 在磁盘上都是占用 4 btyes 的存储空间。就是在显示给用户的方式有点不同外，int(M) 跟 int 数据类型是相同的。</p>\n<p>例如：</p>\n<p>1、int的值为10 （指定zerofill）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int（9）显示结果为000000010</span><br><span class=\"line\">int（3）显示结果为010</span><br></pre></td></tr></table></figure>\n\n<p>就是显示的长度不一样而已 都是占用四个字节的空间</p>\n</blockquote>\n<p><strong>Date 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">DATE()</td>\n<td align=\"left\">日期。格式：YYYY-MM-DD<strong>注释：</strong>支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’</td>\n</tr>\n<tr>\n<td align=\"left\">DATETIME()</td>\n<td align=\"left\">*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS<strong>注释：</strong>支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td>\n</tr>\n<tr>\n<td align=\"left\">TIMESTAMP()</td>\n<td align=\"left\">*时间戳。TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的秒数来存储。格式：YYYY-MM-DD HH:MM:SS<strong>注释：</strong>支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC</td>\n</tr>\n<tr>\n<td align=\"left\">TIME()</td>\n<td align=\"left\">时间。格式：HH:MM:SS<strong>注释：</strong>支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’</td>\n</tr>\n<tr>\n<td align=\"left\">YEAR()</td>\n<td align=\"left\">2 位或 4 位格式的年。<strong>注释：</strong>4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。</td>\n</tr>\n</tbody></table>\n<p>*即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。</p>\n<hr>\n<p>MySQL支持所有标准SQL数值数据类型。</p>\n<p>这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。</p>\n<p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p>\n<p>BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。</p>\n<p>作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"left\">大小</th>\n<th align=\"left\">范围（有符号）</th>\n<th align=\"left\">范围（无符号）</th>\n<th align=\"left\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">TINYINT</td>\n<td align=\"left\">1 byte</td>\n<td align=\"left\">(-128，127)</td>\n<td align=\"left\">(0，255)</td>\n<td align=\"left\">小整数值</td>\n</tr>\n<tr>\n<td align=\"left\">SMALLINT</td>\n<td align=\"left\">2 bytes</td>\n<td align=\"left\">(-32 768，32 767)</td>\n<td align=\"left\">(0，65 535)</td>\n<td align=\"left\">大整数值</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMINT</td>\n<td align=\"left\">3 bytes</td>\n<td align=\"left\">(-8 388 608，8 388 607)</td>\n<td align=\"left\">(0，16 777 215)</td>\n<td align=\"left\">大整数值</td>\n</tr>\n<tr>\n<td align=\"left\">INT或INTEGER</td>\n<td align=\"left\">4 bytes</td>\n<td align=\"left\">(-2 147 483 648，2 147 483 647)</td>\n<td align=\"left\">(0，4 294 967 295)</td>\n<td align=\"left\">大整数值</td>\n</tr>\n<tr>\n<td align=\"left\">BIGINT</td>\n<td align=\"left\">8 bytes</td>\n<td align=\"left\">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td>\n<td align=\"left\">(0，18 446 744 073 709 551 615)</td>\n<td align=\"left\">极大整数值</td>\n</tr>\n<tr>\n<td align=\"left\">FLOAT</td>\n<td align=\"left\">4 bytes</td>\n<td align=\"left\">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td>\n<td align=\"left\">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td>\n<td align=\"left\">单精度 浮点数值</td>\n</tr>\n<tr>\n<td align=\"left\">DOUBLE</td>\n<td align=\"left\">8 bytes</td>\n<td align=\"left\">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>\n<td align=\"left\">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>\n<td align=\"left\">双精度 浮点数值</td>\n</tr>\n<tr>\n<td align=\"left\">DECIMAL</td>\n<td align=\"left\">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td>\n<td align=\"left\">依赖于M和D的值</td>\n<td align=\"left\">依赖于M和D的值</td>\n<td align=\"left\">小数值</td>\n</tr>\n</tbody></table>\n<hr>\n<h2 id=\"日期和时间类型\"><a href=\"#日期和时间类型\" class=\"headerlink\" title=\"日期和时间类型\"></a>日期和时间类型</h2><p>表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。</p>\n<p>每个时间类型有一个有效值范围和一个”零”值，当指定不合法的MySQL不能表示的值时使用”零”值。</p>\n<p>TIMESTAMP类型有专有的自动更新特性，将在后面描述。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"left\">大小 ( bytes)</th>\n<th align=\"left\">范围</th>\n<th align=\"left\">格式</th>\n<th align=\"left\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">DATE</td>\n<td align=\"left\">3</td>\n<td align=\"left\">1000-01-01/9999-12-31</td>\n<td align=\"left\">YYYY-MM-DD</td>\n<td align=\"left\">日期值</td>\n</tr>\n<tr>\n<td align=\"left\">TIME</td>\n<td align=\"left\">3</td>\n<td align=\"left\">‘-838:59:59’/‘838:59:59’</td>\n<td align=\"left\">HH:MM:SS</td>\n<td align=\"left\">时间值或持续时间</td>\n</tr>\n<tr>\n<td align=\"left\">YEAR</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1901/2155</td>\n<td align=\"left\">YYYY</td>\n<td align=\"left\">年份值</td>\n</tr>\n<tr>\n<td align=\"left\">DATETIME</td>\n<td align=\"left\">8</td>\n<td align=\"left\">1000-01-01 00:00:00/9999-12-31 23:59:59</td>\n<td align=\"left\">YYYY-MM-DD HH:MM:SS</td>\n<td align=\"left\">混合日期和时间值</td>\n</tr>\n<tr>\n<td align=\"left\">TIMESTAMP</td>\n<td align=\"left\">4</td>\n<td align=\"left\">1970-01-01 00:00:00/2038结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td>\n<td align=\"left\">YYYYMMDD HHMMSS</td>\n<td align=\"left\">混合日期和时间值，时间戳</td>\n</tr>\n</tbody></table>\n<hr>\n<h2 id=\"字符串类型\"><a href=\"#字符串类型\" class=\"headerlink\" title=\"字符串类型\"></a>字符串类型</h2><p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"left\">大小</th>\n<th align=\"left\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CHAR</td>\n<td align=\"left\">0-255 bytes</td>\n<td align=\"left\">定长字符串</td>\n</tr>\n<tr>\n<td align=\"left\">VARCHAR</td>\n<td align=\"left\">0-65535 bytes</td>\n<td align=\"left\">变长字符串</td>\n</tr>\n<tr>\n<td align=\"left\">TINYBLOB</td>\n<td align=\"left\">0-255 bytes</td>\n<td align=\"left\">不超过 255 个字符的二进制字符串</td>\n</tr>\n<tr>\n<td align=\"left\">TINYTEXT</td>\n<td align=\"left\">0-255 bytes</td>\n<td align=\"left\">短文本字符串</td>\n</tr>\n<tr>\n<td align=\"left\">BLOB</td>\n<td align=\"left\">0-65 535 bytes</td>\n<td align=\"left\">二进制形式的长文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">TEXT</td>\n<td align=\"left\">0-65 535 bytes</td>\n<td align=\"left\">长文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMBLOB</td>\n<td align=\"left\">0-16 777 215 bytes</td>\n<td align=\"left\">二进制形式的中等长度文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMTEXT</td>\n<td align=\"left\">0-16 777 215 bytes</td>\n<td align=\"left\">中等长度文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">LONGBLOB</td>\n<td align=\"left\">0-4 294 967 295 bytes</td>\n<td align=\"left\">二进制形式的极大文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">LONGTEXT</td>\n<td align=\"left\">0-4 294 967 295 bytes</td>\n<td align=\"left\">极大文本数据</td>\n</tr>\n</tbody></table>\n<p><strong>注意</strong>：char(n) 和 varchar(n) 中括号中 n 代表字符的个数，并不代表字节个数，比如 CHAR(30) 就可以存储 30 个字符。</p>\n<p>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p>\n<p>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p>\n<p>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</p>\n<p>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。</p>\n<hr>\n<h2 id=\"Microsoft-Access-数据类型\"><a href=\"#Microsoft-Access-数据类型\" class=\"headerlink\" title=\"Microsoft Access 数据类型\"></a>Microsoft Access 数据类型</h2><table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">存储</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Text</td>\n<td align=\"left\">用于文本或文本与数字的组合。最多 255 个字符。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Memo</td>\n<td align=\"left\">Memo 用于更大数量的文本。最多存储 65,536 个字符。<strong>注释：</strong>无法对 memo 字段进行排序。不过它们是可搜索的。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Byte</td>\n<td align=\"left\">允许 0 到 255 的数字。</td>\n<td align=\"left\">1 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Integer</td>\n<td align=\"left\">允许介于 -32,768 与 32,767 之间的全部数字。</td>\n<td align=\"left\">2 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Long</td>\n<td align=\"left\">允许介于 -2,147,483,648 与 2,147,483,647 之间的全部数字。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Single</td>\n<td align=\"left\">单精度浮点。处理大多数小数。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Double</td>\n<td align=\"left\">双精度浮点。处理大多数小数。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Currency</td>\n<td align=\"left\">用于货币。支持 15 位的元，外加 4 位小数。<strong>提示：</strong>您可以选择使用哪个国家的货币。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">AutoNumber</td>\n<td align=\"left\">AutoNumber 字段自动为每条记录分配数字，通常从 1 开始。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Date/Time</td>\n<td align=\"left\">用于日期和时间</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Yes/No</td>\n<td align=\"left\">逻辑字段，可以显示为 Yes/No、True/False 或 On/Off。在代码中，使用常量 True 和 False （等价于 1 和 0）。<strong>注释：</strong>Yes/No 字段中不允许 Null 值</td>\n<td align=\"left\">1 比特</td>\n</tr>\n<tr>\n<td align=\"left\">Ole Object</td>\n<td align=\"left\">可以存储图片、音频、视频或其他 BLOBs（Binary Large OBjects）。</td>\n<td align=\"left\">最多 1GB</td>\n</tr>\n<tr>\n<td align=\"left\">Hyperlink</td>\n<td align=\"left\">包含指向其他文件的链接，包括网页。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Lookup Wizard</td>\n<td align=\"left\">允许您创建一个可从下拉列表中进行选择的选项列表。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n</tbody></table>\n<h2 id=\"SQL-Server-数据类型\"><a href=\"#SQL-Server-数据类型\" class=\"headerlink\" title=\"SQL Server 数据类型\"></a>SQL Server 数据类型</h2><p><strong>String 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">存储</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">char(n)</td>\n<td align=\"left\">固定长度的字符串。最多 8,000 个字符。</td>\n<td align=\"left\">Defined width</td>\n</tr>\n<tr>\n<td align=\"left\">varchar(n)</td>\n<td align=\"left\">可变长度的字符串。最多 8,000 个字符。</td>\n<td align=\"left\">2 bytes + number of chars</td>\n</tr>\n<tr>\n<td align=\"left\">varchar(max)</td>\n<td align=\"left\">可变长度的字符串。最多 1,073,741,824 个字符。</td>\n<td align=\"left\">2 bytes + number of chars</td>\n</tr>\n<tr>\n<td align=\"left\">text</td>\n<td align=\"left\">可变长度的字符串。最多 2GB 文本数据。</td>\n<td align=\"left\">4 bytes + number of chars</td>\n</tr>\n<tr>\n<td align=\"left\">nchar</td>\n<td align=\"left\">固定长度的 Unicode 字符串。最多 4,000 个字符。</td>\n<td align=\"left\">Defined width x 2</td>\n</tr>\n<tr>\n<td align=\"left\">nvarchar</td>\n<td align=\"left\">可变长度的 Unicode 字符串。最多 4,000 个字符。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">nvarchar(max)</td>\n<td align=\"left\">可变长度的 Unicode 字符串。最多 536,870,912 个字符。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">ntext</td>\n<td align=\"left\">可变长度的 Unicode 字符串。最多 2GB 文本数据。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">bit</td>\n<td align=\"left\">允许 0、1 或 NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">binary(n)</td>\n<td align=\"left\">固定长度的二进制字符串。最多 8,000 字节。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">varbinary</td>\n<td align=\"left\">可变长度的二进制字符串。最多 8,000 字节。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">varbinary(max)</td>\n<td align=\"left\">可变长度的二进制字符串。最多 2GB。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">image</td>\n<td align=\"left\">可变长度的二进制字符串。最多 2GB。</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p><strong>Number 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">存储</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">tinyint</td>\n<td align=\"left\">允许从 0 到 255 的所有数字。</td>\n<td align=\"left\">1 字节</td>\n</tr>\n<tr>\n<td align=\"left\">smallint</td>\n<td align=\"left\">允许介于 -32,768 与 32,767 的所有数字。</td>\n<td align=\"left\">2 字节</td>\n</tr>\n<tr>\n<td align=\"left\">int</td>\n<td align=\"left\">允许介于 -2,147,483,648 与 2,147,483,647 的所有数字。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">bigint</td>\n<td align=\"left\">允许介于 -9,223,372,036,854,775,808 与 9,223,372,036,854,775,807 之间的所有数字。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">decimal(p,s)</td>\n<td align=\"left\">固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td>\n<td align=\"left\">5-17 字节</td>\n</tr>\n<tr>\n<td align=\"left\">numeric(p,s)</td>\n<td align=\"left\">固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td>\n<td align=\"left\">5-17 字节</td>\n</tr>\n<tr>\n<td align=\"left\">smallmoney</td>\n<td align=\"left\">介于 -214,748.3648 与 214,748.3647 之间的货币数据。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">money</td>\n<td align=\"left\">介于 -922,337,203,685,477.5808 与 922,337,203,685,477.5807 之间的货币数据。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">float(n)</td>\n<td align=\"left\">从 -1.79E + 308 到 1.79E + 308 的浮动精度数字数据。n 参数指示该字段保存 4 字节还是 8 字节。float(24) 保存 4 字节，而 float(53) 保存 8 字节。n 的默认值是 53。</td>\n<td align=\"left\">4 或 8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">real</td>\n<td align=\"left\">从 -3.40E + 38 到 3.40E + 38 的浮动精度数字数据。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n</tbody></table>\n<p><strong>Date 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">存储</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">datetime</td>\n<td align=\"left\">从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 3.33 毫秒。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">datetime2</td>\n<td align=\"left\">从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 100 纳秒。</td>\n<td align=\"left\">6-8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">smalldatetime</td>\n<td align=\"left\">从 1900 年 1 月 1 日 到 2079 年 6 月 6 日，精度为 1 分钟。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">date</td>\n<td align=\"left\">仅存储日期。从 0001 年 1 月 1 日 到 9999 年 12 月 31 日。</td>\n<td align=\"left\">3 bytes</td>\n</tr>\n<tr>\n<td align=\"left\">time</td>\n<td align=\"left\">仅存储时间。精度为 100 纳秒。</td>\n<td align=\"left\">3-5 字节</td>\n</tr>\n<tr>\n<td align=\"left\">datetimeoffset</td>\n<td align=\"left\">与 datetime2 相同，外加时区偏移。</td>\n<td align=\"left\">8-10 字节</td>\n</tr>\n<tr>\n<td align=\"left\">timestamp</td>\n<td align=\"left\">存储唯一的数字，每当创建或修改某行时，该数字会更新。timestamp 值基于内部时钟，不对应真实时间。每个表只能有一个 timestamp 变量。</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p><strong>其他数据类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">sql_variant</td>\n<td align=\"left\">存储最多 8,000 字节不同数据类型的数据，除了 text、ntext 以及 timestamp。</td>\n</tr>\n<tr>\n<td align=\"left\">uniqueidentifier</td>\n<td align=\"left\">存储全局唯一标识符 (GUID)。</td>\n</tr>\n<tr>\n<td align=\"left\">xml</td>\n<td align=\"left\">存储 XML 格式化数据。最多 2GB。</td>\n</tr>\n<tr>\n<td align=\"left\">cursor</td>\n<td align=\"left\">存储对用于数据库操作的指针的引用。</td>\n</tr>\n<tr>\n<td align=\"left\">table</td>\n<td align=\"left\">存储结果集，供稍后处理。</td>\n</tr>\n</tbody></table>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p>[^1]: <a href=\"https://www.runoob.com/sql/sql-datatypes.html\">菜鸟教程——SQL 用于各种数据库的数据类型</a> </p>\n","categories":[{"name":"Mysql","slug":"Mysql","count":2,"path":"api/categories/Mysql.json"}],"tags":[{"name":"mysql","slug":"mysql","count":2,"path":"api/tags/mysql.json"},{"name":"数据存储","slug":"数据存储","count":2,"path":"api/tags/数据存储.json"}]}