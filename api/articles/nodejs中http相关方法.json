{"title":"nodejs中http相关方法","slug":"nodejs中http相关方法","date":"2021-08-31T06:25:35.662Z","updated":"2021-08-31T07:54:54.543Z","comments":true,"path":"api/articles/nodejs中http相关方法.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"nodejs中http相关方法\"><a href=\"#nodejs中http相关方法\" class=\"headerlink\" title=\"nodejs中http相关方法\"></a>nodejs中http相关方法</h1><h2 id=\"response相关\"><a href=\"#response相关\" class=\"headerlink\" title=\"response相关\"></a>response相关</h2><h3 id=\"http-response-end\"><a href=\"#http-response-end\" class=\"headerlink\" title=\"http.response.end\"></a>http.response.end</h3><p>原文链接<a href=\"https://www.jb51.net/article/58468.htm\">https://www.jb51.net/article/58468.htm</a></p>\n<blockquote>\n<p>http.response.end结束响应，告诉客户端所有消息已经发送。当所有要返回的内容发送完毕时，该函数必须被调用一次。<br>如果不调用该函数，客户端将永远处于等待状态。<br>语法：<br>response.end([data], [encoding])<br>接收参数：<br>data ： end()执行完毕后要输出的字符，如果指定了 data 的值，那就意味着在执行完 response.end() 之后，会接着执行一条 response.write(data , encoding);<br>encoding： 对应data的字符编码 </p>\n</blockquote>\n<h3 id=\"http-response-write\"><a href=\"#http-response-write\" class=\"headerlink\" title=\"http.response.write\"></a>http.response.write</h3><p>原文链接：<a href=\"https://www.jianshu.com/p/ab0889a387e6\">https://www.jianshu.com/p/ab0889a387e6</a><br>response.write(chunk, [encoding])<br>参数：chunk 是一个buffer 或 字符串，表示发送的内容encoding 如果chunk是字符串，就需要指定encoding来说明它的编码方式，默认utf-8<br>该函数用于向请求的客户端发送响应内容。在 response.end() 之前，response.write() 可以被执行多次。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">&#x27;/to&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,resp</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    resp.write(<span class=\"string\">&quot;JQK&quot;</span>);</span><br><span class=\"line\">    resp.end(<span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>后续的response.end(data)并不会覆盖之前response.write(data)的值</p>\n","categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":11,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"JavaScript","slug":"Programming-languages-and-projects/JavaScript","count":2,"path":"api/categories/Programming-languages-and-projects/JavaScript.json"},{"name":"Nodejs","slug":"Programming-languages-and-projects/JavaScript/Nodejs","count":2,"path":"api/categories/Programming-languages-and-projects/JavaScript/Nodejs.json"}],"tags":[{"name":"http","slug":"http","count":2,"path":"api/tags/http.json"},{"name":"nodejs","slug":"nodejs","count":2,"path":"api/tags/nodejs.json"}]}