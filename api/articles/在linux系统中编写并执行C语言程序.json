{"title":"在linux系统中编写并执行C语言程序","slug":"在linux系统中编写并执行C语言程序","date":"2021-09-24T12:07:36.765Z","updated":"2021-09-27T02:26:49.095Z","comments":true,"path":"api/articles/在linux系统中编写并执行C语言程序.json","photos":[],"link":"","excerpt":null,"covers":["E:\\JS练习\\blog\\Myblog\\source\\images\\C可执行文件.png"],"content":"<h1 id=\"在linux系统中编写并执行C语言程序\"><a href=\"#在linux系统中编写并执行C语言程序\" class=\"headerlink\" title=\"在linux系统中编写并执行C语言程序\"></a>在linux系统中编写并执行C语言程序</h1><h2 id=\"1-按照教程使用Vmware创建虚拟机\"><a href=\"#1-按照教程使用Vmware创建虚拟机\" class=\"headerlink\" title=\"1. 按照教程使用Vmware创建虚拟机\"></a>1. 按照<a href=\"https://blog.csdn.net/weixin_44232795/article/details/104556174\">教程</a>使用Vmware创建虚拟机</h2><p>值得注意的两点是，vmware15的激活码无法适用于vmware16的虚拟机，ubuntu的iso映像文件可以在官方网站中下载，使用最新（20版本）的即可。版本名称中带有desktop字段的意味着自带图形界面系统。</p>\n<h2 id=\"2-linux系统下的C语言编译执行\"><a href=\"#2-linux系统下的C语言编译执行\" class=\"headerlink\" title=\"2. linux系统下的C语言编译执行\"></a>2. linux系统下的C语言编译执行</h2><p>我们按照教程的步骤配置编译程序环境：</p>\n<blockquote>\n<p>找到命令行窗口输入：<br>（1）、sudo apt-get install gcc<br>（2）、sudo apt-get install build-essential //编写c所用到的库<br>（3）、gedit [文件名].c //创建一个c文件，并且会自动打开，即可开始编写<br>（4）、gcc [文件名].c -o [自定义程序名] //创建可执行文件<br>（5）、./ [自定义程序名] //即可运行</p>\n</blockquote>\n<p>然后写了第一个简单的程序：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;hello world\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行，报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user@ubuntu:~$ <span class=\"built_in\">cd</span> Desktop</span><br><span class=\"line\"><span class=\"comment\">#因为是在桌面上直接创建的cpp程序，因此要从home/user文件夹中跳到子文件夹Desktop中</span></span><br><span class=\"line\"></span><br><span class=\"line\">user@ubuntu:~/Desktop$ ./hello.cpp</span><br><span class=\"line\">bash: ./hello.cpp: Permission denied</span><br></pre></td></tr></table></figure>\n\n<p>根据<a href=\"https://blog.csdn.net/mch2869253130/article/details/89403626\">博客</a>的讲解：</p>\n<blockquote>\n<p>出现这个问题的原因是由于权限不够。解决办法就是改变可执行文件的权限。</p>\n<p>对于单个的可执行文件使用命令：<code>chmod 777 file-name</code><br>若需要将一个目录下的所有可执行文件的权限都升级，可使用命令：<code>chmod -R 777 directory-name</code></p>\n<p>其中：<br>-R 是指级联应用到目录里的所有子目录和文件<br>777 是所有用户都拥有最高权限</p>\n</blockquote>\n<p>如果我们不对cpp文件创建可执行文件，而是直接运行cpp文件，会导致报错如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user@ubuntu:~/Desktop$ ./hello.cpp</span><br><span class=\"line\">./hello.cpp: line 2: syntax error near unexpected token `(<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">./hello.cpp: line 2: `int main()&#123;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>只有执行gcc编译命令后，再执行相关可执行文件，才可正确输出：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user@ubuntu:~/Desktop$ gcc hello.cpp -o hello</span><br><span class=\"line\">user@ubuntu:~/Desktop$ ./hello</span><br><span class=\"line\">hello world</span><br></pre></td></tr></table></figure>\n\n<p>除此之外，我们还可以在ubuntu的页面上看到一个hello可执行文件：</p>\n<p><img src=\"E:\\JS练习\\blog\\Myblog\\source\\images\\C可执行文件.png\" alt=\"hello可执行文件\"></p>\n<p>可以看到，文件的类型其实就是executable，简称exe可执行文件。</p>\n<h2 id=\"3-GCC编译\"><a href=\"#3-GCC编译\" class=\"headerlink\" title=\"3. GCC编译\"></a>3. GCC编译</h2><p>在配置好的windows系统中，C程序执行步骤如下所示：</p>\n<blockquote>\n<ol>\n<li>打开一个文本编辑器，添加上述代码。</li>\n<li>保存文件为 <em>hello.c</em>。</li>\n<li>打开命令提示符，进入到保存文件所在的目录。</li>\n<li>键入 <em>gcc hello.c</em>，输入回车，编译代码。</li>\n<li>如果代码中没有错误，命令提示符会跳到下一行，并生成 <em>a.out</em> 可执行文件。</li>\n<li>现在，键入 <em>a.out</em> 来执行程序。</li>\n<li>您可以看到屏幕上显示 *”Hello World”*。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gcc hello.c</span><br><span class=\"line\">$ ./a.out</span><br><span class=\"line\">Hello, World!</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>在C语言中，一个源程序如果不编译是绝对无法运行的。一个源程序必须经过编译生成后缀为.obj目标程序，然后连接生成后缀为.exe的可执行文件，方能运行。如果编译没有问题，只能说明没有语法错误，但可能会存在一些逻辑错误导致程序不能运行。</p>\n","categories":[{"name":"Linux","slug":"Linux","count":2,"path":"api/categories/Linux.json"}],"tags":[{"name":"虚拟机","slug":"虚拟机","count":2,"path":"api/tags/虚拟机.json"},{"name":"linux","slug":"linux","count":2,"path":"api/tags/linux.json"},{"name":"ubuntu","slug":"ubuntu","count":2,"path":"api/tags/ubuntu.json"},{"name":"c语言","slug":"c语言","count":2,"path":"api/tags/c语言.json"}]}