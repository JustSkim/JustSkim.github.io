{"total":27,"pageSize":10,"pageCount":3,"data":[{"title":"MYSQL数据类型","slug":"MYSQL数据类型","date":"2021-09-05T06:24:59.886Z","updated":"2021-09-06T02:01:31.733Z","comments":true,"path":"api/articles/MYSQL数据类型.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"MYSQL数据类型\"><a href=\"#MYSQL数据类型\" class=\"headerlink\" title=\"MYSQL数据类型\"></a>MYSQL数据类型</h1><p><a href=\"https://www.runoob.com/sql/sql-datatypes.html\">菜鸟教程</a>[^1]中给出了几款主流数据库软件的数据类型</p>\n<h2 id=\"这一篇中我们着重讲MySQL-数据类型\"><a href=\"#这一篇中我们着重讲MySQL-数据类型\" class=\"headerlink\" title=\"这一篇中我们着重讲MySQL 数据类型\"></a>这一篇中我们着重讲MySQL 数据类型</h2><p>在 MySQL 中，有三种主要的类型：Text（文本）、Number（数字）和 Date/Time（日期/时间）类型。</p>\n<p><strong>Text 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CHAR(size)</td>\n<td align=\"left\">保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。</td>\n</tr>\n<tr>\n<td align=\"left\">VARCHAR(size)</td>\n<td align=\"left\">保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。<strong>注释：</strong>如果值的长度大于 255，则被转换为 TEXT 类型。</td>\n</tr>\n<tr>\n<td align=\"left\">TINYTEXT</td>\n<td align=\"left\">存放最大长度为 255 个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">TEXT</td>\n<td align=\"left\">存放最大长度为 65,535 个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">BLOB</td>\n<td align=\"left\">用于 BLOBs（Binary Large OBjects）。存放最多 65,535 字节的数据。</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMTEXT</td>\n<td align=\"left\">存放最大长度为 16,777,215 个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMBLOB</td>\n<td align=\"left\">用于 BLOBs（Binary Large OBjects）。存放最多 16,777,215 字节的数据。</td>\n</tr>\n<tr>\n<td align=\"left\">LONGTEXT</td>\n<td align=\"left\">存放最大长度为 4,294,967,295 个字符的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">LONGBLOB</td>\n<td align=\"left\">用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。</td>\n</tr>\n<tr>\n<td align=\"left\">ENUM(x,y,z,etc.)</td>\n<td align=\"left\">允许您输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。<strong>注释：</strong>这些值是按照您输入的顺序排序的。可以按照此格式输入可能的值： ENUM(‘X’,’Y’,’Z’)</td>\n</tr>\n<tr>\n<td align=\"left\">SET</td>\n<td align=\"left\">与 ENUM 类似，不同的是，SET 最多只能包含 64 个列表项且 SET 可存储一个以上的选择。</td>\n</tr>\n</tbody></table>\n<p><strong>Number 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">TINYINT(size)</td>\n<td align=\"left\">带符号-128到127 ，无符号0到255。</td>\n</tr>\n<tr>\n<td align=\"left\">SMALLINT(size)</td>\n<td align=\"left\">带符号范围-32768到32767，无符号0到65535, size 默认为 6。</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMINT(size)</td>\n<td align=\"left\">带符号范围-8388608到8388607，无符号的范围是0到16777215。 size 默认为9</td>\n</tr>\n<tr>\n<td align=\"left\">INT(size)</td>\n<td align=\"left\">带符号范围-2147483648到2147483647，无符号的范围是0到4294967295。 size 默认为 11</td>\n</tr>\n<tr>\n<td align=\"left\">BIGINT(size)</td>\n<td align=\"left\">带符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到18446744073709551615。size 默认为 20</td>\n</tr>\n<tr>\n<td align=\"left\">FLOAT(size,d)</td>\n<td align=\"left\">带有浮动小数点的小数字。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td align=\"left\">DOUBLE(size,d)</td>\n<td align=\"left\">带有浮动小数点的大数字。在 size 参数中规显示定最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n<tr>\n<td align=\"left\">DECIMAL(size,d)</td>\n<td align=\"left\">作为字符串存储的 DOUBLE 类型，允许固定的小数点。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>注意：</strong>以上的 size 代表的并不是存储在数据库中的具体的长度，如 int(4) 并不是只能存储4个长度的数字。</p>\n<p>实际上int(size)所占多少存储空间并无任何关系。int(3)、int(4)、int(8) 在磁盘上都是占用 4 btyes 的存储空间。就是在显示给用户的方式有点不同外，int(M) 跟 int 数据类型是相同的。</p>\n<p>例如：</p>\n<p>1、int的值为10 （指定zerofill）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int（9）显示结果为000000010</span><br><span class=\"line\">int（3）显示结果为010</span><br></pre></td></tr></table></figure>\n\n<p>就是显示的长度不一样而已 都是占用四个字节的空间</p>\n</blockquote>\n<p><strong>Date 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">DATE()</td>\n<td align=\"left\">日期。格式：YYYY-MM-DD<strong>注释：</strong>支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’</td>\n</tr>\n<tr>\n<td align=\"left\">DATETIME()</td>\n<td align=\"left\">*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS<strong>注释：</strong>支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td>\n</tr>\n<tr>\n<td align=\"left\">TIMESTAMP()</td>\n<td align=\"left\">*时间戳。TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的秒数来存储。格式：YYYY-MM-DD HH:MM:SS<strong>注释：</strong>支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC</td>\n</tr>\n<tr>\n<td align=\"left\">TIME()</td>\n<td align=\"left\">时间。格式：HH:MM:SS<strong>注释：</strong>支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’</td>\n</tr>\n<tr>\n<td align=\"left\">YEAR()</td>\n<td align=\"left\">2 位或 4 位格式的年。<strong>注释：</strong>4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。</td>\n</tr>\n</tbody></table>\n<p>*即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。</p>\n<hr>\n<p>MySQL支持所有标准SQL数值数据类型。</p>\n<p>这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。</p>\n<p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p>\n<p>BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。</p>\n<p>作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"left\">大小</th>\n<th align=\"left\">范围（有符号）</th>\n<th align=\"left\">范围（无符号）</th>\n<th align=\"left\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">TINYINT</td>\n<td align=\"left\">1 byte</td>\n<td align=\"left\">(-128，127)</td>\n<td align=\"left\">(0，255)</td>\n<td align=\"left\">小整数值</td>\n</tr>\n<tr>\n<td align=\"left\">SMALLINT</td>\n<td align=\"left\">2 bytes</td>\n<td align=\"left\">(-32 768，32 767)</td>\n<td align=\"left\">(0，65 535)</td>\n<td align=\"left\">大整数值</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMINT</td>\n<td align=\"left\">3 bytes</td>\n<td align=\"left\">(-8 388 608，8 388 607)</td>\n<td align=\"left\">(0，16 777 215)</td>\n<td align=\"left\">大整数值</td>\n</tr>\n<tr>\n<td align=\"left\">INT或INTEGER</td>\n<td align=\"left\">4 bytes</td>\n<td align=\"left\">(-2 147 483 648，2 147 483 647)</td>\n<td align=\"left\">(0，4 294 967 295)</td>\n<td align=\"left\">大整数值</td>\n</tr>\n<tr>\n<td align=\"left\">BIGINT</td>\n<td align=\"left\">8 bytes</td>\n<td align=\"left\">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td>\n<td align=\"left\">(0，18 446 744 073 709 551 615)</td>\n<td align=\"left\">极大整数值</td>\n</tr>\n<tr>\n<td align=\"left\">FLOAT</td>\n<td align=\"left\">4 bytes</td>\n<td align=\"left\">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td>\n<td align=\"left\">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td>\n<td align=\"left\">单精度 浮点数值</td>\n</tr>\n<tr>\n<td align=\"left\">DOUBLE</td>\n<td align=\"left\">8 bytes</td>\n<td align=\"left\">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>\n<td align=\"left\">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td>\n<td align=\"left\">双精度 浮点数值</td>\n</tr>\n<tr>\n<td align=\"left\">DECIMAL</td>\n<td align=\"left\">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td>\n<td align=\"left\">依赖于M和D的值</td>\n<td align=\"left\">依赖于M和D的值</td>\n<td align=\"left\">小数值</td>\n</tr>\n</tbody></table>\n<hr>\n<h2 id=\"日期和时间类型\"><a href=\"#日期和时间类型\" class=\"headerlink\" title=\"日期和时间类型\"></a>日期和时间类型</h2><p>表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。</p>\n<p>每个时间类型有一个有效值范围和一个”零”值，当指定不合法的MySQL不能表示的值时使用”零”值。</p>\n<p>TIMESTAMP类型有专有的自动更新特性，将在后面描述。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"left\">大小 ( bytes)</th>\n<th align=\"left\">范围</th>\n<th align=\"left\">格式</th>\n<th align=\"left\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">DATE</td>\n<td align=\"left\">3</td>\n<td align=\"left\">1000-01-01/9999-12-31</td>\n<td align=\"left\">YYYY-MM-DD</td>\n<td align=\"left\">日期值</td>\n</tr>\n<tr>\n<td align=\"left\">TIME</td>\n<td align=\"left\">3</td>\n<td align=\"left\">‘-838:59:59’/‘838:59:59’</td>\n<td align=\"left\">HH:MM:SS</td>\n<td align=\"left\">时间值或持续时间</td>\n</tr>\n<tr>\n<td align=\"left\">YEAR</td>\n<td align=\"left\">1</td>\n<td align=\"left\">1901/2155</td>\n<td align=\"left\">YYYY</td>\n<td align=\"left\">年份值</td>\n</tr>\n<tr>\n<td align=\"left\">DATETIME</td>\n<td align=\"left\">8</td>\n<td align=\"left\">1000-01-01 00:00:00/9999-12-31 23:59:59</td>\n<td align=\"left\">YYYY-MM-DD HH:MM:SS</td>\n<td align=\"left\">混合日期和时间值</td>\n</tr>\n<tr>\n<td align=\"left\">TIMESTAMP</td>\n<td align=\"left\">4</td>\n<td align=\"left\">1970-01-01 00:00:00/2038结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td>\n<td align=\"left\">YYYYMMDD HHMMSS</td>\n<td align=\"left\">混合日期和时间值，时间戳</td>\n</tr>\n</tbody></table>\n<hr>\n<h2 id=\"字符串类型\"><a href=\"#字符串类型\" class=\"headerlink\" title=\"字符串类型\"></a>字符串类型</h2><p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">类型</th>\n<th align=\"left\">大小</th>\n<th align=\"left\">用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">CHAR</td>\n<td align=\"left\">0-255 bytes</td>\n<td align=\"left\">定长字符串</td>\n</tr>\n<tr>\n<td align=\"left\">VARCHAR</td>\n<td align=\"left\">0-65535 bytes</td>\n<td align=\"left\">变长字符串</td>\n</tr>\n<tr>\n<td align=\"left\">TINYBLOB</td>\n<td align=\"left\">0-255 bytes</td>\n<td align=\"left\">不超过 255 个字符的二进制字符串</td>\n</tr>\n<tr>\n<td align=\"left\">TINYTEXT</td>\n<td align=\"left\">0-255 bytes</td>\n<td align=\"left\">短文本字符串</td>\n</tr>\n<tr>\n<td align=\"left\">BLOB</td>\n<td align=\"left\">0-65 535 bytes</td>\n<td align=\"left\">二进制形式的长文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">TEXT</td>\n<td align=\"left\">0-65 535 bytes</td>\n<td align=\"left\">长文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMBLOB</td>\n<td align=\"left\">0-16 777 215 bytes</td>\n<td align=\"left\">二进制形式的中等长度文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">MEDIUMTEXT</td>\n<td align=\"left\">0-16 777 215 bytes</td>\n<td align=\"left\">中等长度文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">LONGBLOB</td>\n<td align=\"left\">0-4 294 967 295 bytes</td>\n<td align=\"left\">二进制形式的极大文本数据</td>\n</tr>\n<tr>\n<td align=\"left\">LONGTEXT</td>\n<td align=\"left\">0-4 294 967 295 bytes</td>\n<td align=\"left\">极大文本数据</td>\n</tr>\n</tbody></table>\n<p><strong>注意</strong>：char(n) 和 varchar(n) 中括号中 n 代表字符的个数，并不代表字节个数，比如 CHAR(30) 就可以存储 30 个字符。</p>\n<p>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p>\n<p>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p>\n<p>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</p>\n<p>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。</p>\n<hr>\n<h2 id=\"Microsoft-Access-数据类型\"><a href=\"#Microsoft-Access-数据类型\" class=\"headerlink\" title=\"Microsoft Access 数据类型\"></a>Microsoft Access 数据类型</h2><table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">存储</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Text</td>\n<td align=\"left\">用于文本或文本与数字的组合。最多 255 个字符。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Memo</td>\n<td align=\"left\">Memo 用于更大数量的文本。最多存储 65,536 个字符。<strong>注释：</strong>无法对 memo 字段进行排序。不过它们是可搜索的。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Byte</td>\n<td align=\"left\">允许 0 到 255 的数字。</td>\n<td align=\"left\">1 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Integer</td>\n<td align=\"left\">允许介于 -32,768 与 32,767 之间的全部数字。</td>\n<td align=\"left\">2 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Long</td>\n<td align=\"left\">允许介于 -2,147,483,648 与 2,147,483,647 之间的全部数字。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Single</td>\n<td align=\"left\">单精度浮点。处理大多数小数。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Double</td>\n<td align=\"left\">双精度浮点。处理大多数小数。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Currency</td>\n<td align=\"left\">用于货币。支持 15 位的元，外加 4 位小数。<strong>提示：</strong>您可以选择使用哪个国家的货币。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">AutoNumber</td>\n<td align=\"left\">AutoNumber 字段自动为每条记录分配数字，通常从 1 开始。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Date/Time</td>\n<td align=\"left\">用于日期和时间</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">Yes/No</td>\n<td align=\"left\">逻辑字段，可以显示为 Yes/No、True/False 或 On/Off。在代码中，使用常量 True 和 False （等价于 1 和 0）。<strong>注释：</strong>Yes/No 字段中不允许 Null 值</td>\n<td align=\"left\">1 比特</td>\n</tr>\n<tr>\n<td align=\"left\">Ole Object</td>\n<td align=\"left\">可以存储图片、音频、视频或其他 BLOBs（Binary Large OBjects）。</td>\n<td align=\"left\">最多 1GB</td>\n</tr>\n<tr>\n<td align=\"left\">Hyperlink</td>\n<td align=\"left\">包含指向其他文件的链接，包括网页。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Lookup Wizard</td>\n<td align=\"left\">允许您创建一个可从下拉列表中进行选择的选项列表。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n</tbody></table>\n<h2 id=\"SQL-Server-数据类型\"><a href=\"#SQL-Server-数据类型\" class=\"headerlink\" title=\"SQL Server 数据类型\"></a>SQL Server 数据类型</h2><p><strong>String 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">存储</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">char(n)</td>\n<td align=\"left\">固定长度的字符串。最多 8,000 个字符。</td>\n<td align=\"left\">Defined width</td>\n</tr>\n<tr>\n<td align=\"left\">varchar(n)</td>\n<td align=\"left\">可变长度的字符串。最多 8,000 个字符。</td>\n<td align=\"left\">2 bytes + number of chars</td>\n</tr>\n<tr>\n<td align=\"left\">varchar(max)</td>\n<td align=\"left\">可变长度的字符串。最多 1,073,741,824 个字符。</td>\n<td align=\"left\">2 bytes + number of chars</td>\n</tr>\n<tr>\n<td align=\"left\">text</td>\n<td align=\"left\">可变长度的字符串。最多 2GB 文本数据。</td>\n<td align=\"left\">4 bytes + number of chars</td>\n</tr>\n<tr>\n<td align=\"left\">nchar</td>\n<td align=\"left\">固定长度的 Unicode 字符串。最多 4,000 个字符。</td>\n<td align=\"left\">Defined width x 2</td>\n</tr>\n<tr>\n<td align=\"left\">nvarchar</td>\n<td align=\"left\">可变长度的 Unicode 字符串。最多 4,000 个字符。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">nvarchar(max)</td>\n<td align=\"left\">可变长度的 Unicode 字符串。最多 536,870,912 个字符。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">ntext</td>\n<td align=\"left\">可变长度的 Unicode 字符串。最多 2GB 文本数据。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">bit</td>\n<td align=\"left\">允许 0、1 或 NULL</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">binary(n)</td>\n<td align=\"left\">固定长度的二进制字符串。最多 8,000 字节。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">varbinary</td>\n<td align=\"left\">可变长度的二进制字符串。最多 8,000 字节。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">varbinary(max)</td>\n<td align=\"left\">可变长度的二进制字符串。最多 2GB。</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">image</td>\n<td align=\"left\">可变长度的二进制字符串。最多 2GB。</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p><strong>Number 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">存储</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">tinyint</td>\n<td align=\"left\">允许从 0 到 255 的所有数字。</td>\n<td align=\"left\">1 字节</td>\n</tr>\n<tr>\n<td align=\"left\">smallint</td>\n<td align=\"left\">允许介于 -32,768 与 32,767 的所有数字。</td>\n<td align=\"left\">2 字节</td>\n</tr>\n<tr>\n<td align=\"left\">int</td>\n<td align=\"left\">允许介于 -2,147,483,648 与 2,147,483,647 的所有数字。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">bigint</td>\n<td align=\"left\">允许介于 -9,223,372,036,854,775,808 与 9,223,372,036,854,775,807 之间的所有数字。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">decimal(p,s)</td>\n<td align=\"left\">固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td>\n<td align=\"left\">5-17 字节</td>\n</tr>\n<tr>\n<td align=\"left\">numeric(p,s)</td>\n<td align=\"left\">固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td>\n<td align=\"left\">5-17 字节</td>\n</tr>\n<tr>\n<td align=\"left\">smallmoney</td>\n<td align=\"left\">介于 -214,748.3648 与 214,748.3647 之间的货币数据。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">money</td>\n<td align=\"left\">介于 -922,337,203,685,477.5808 与 922,337,203,685,477.5807 之间的货币数据。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">float(n)</td>\n<td align=\"left\">从 -1.79E + 308 到 1.79E + 308 的浮动精度数字数据。n 参数指示该字段保存 4 字节还是 8 字节。float(24) 保存 4 字节，而 float(53) 保存 8 字节。n 的默认值是 53。</td>\n<td align=\"left\">4 或 8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">real</td>\n<td align=\"left\">从 -3.40E + 38 到 3.40E + 38 的浮动精度数字数据。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n</tbody></table>\n<p><strong>Date 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n<th align=\"left\">存储</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">datetime</td>\n<td align=\"left\">从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 3.33 毫秒。</td>\n<td align=\"left\">8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">datetime2</td>\n<td align=\"left\">从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 100 纳秒。</td>\n<td align=\"left\">6-8 字节</td>\n</tr>\n<tr>\n<td align=\"left\">smalldatetime</td>\n<td align=\"left\">从 1900 年 1 月 1 日 到 2079 年 6 月 6 日，精度为 1 分钟。</td>\n<td align=\"left\">4 字节</td>\n</tr>\n<tr>\n<td align=\"left\">date</td>\n<td align=\"left\">仅存储日期。从 0001 年 1 月 1 日 到 9999 年 12 月 31 日。</td>\n<td align=\"left\">3 bytes</td>\n</tr>\n<tr>\n<td align=\"left\">time</td>\n<td align=\"left\">仅存储时间。精度为 100 纳秒。</td>\n<td align=\"left\">3-5 字节</td>\n</tr>\n<tr>\n<td align=\"left\">datetimeoffset</td>\n<td align=\"left\">与 datetime2 相同，外加时区偏移。</td>\n<td align=\"left\">8-10 字节</td>\n</tr>\n<tr>\n<td align=\"left\">timestamp</td>\n<td align=\"left\">存储唯一的数字，每当创建或修改某行时，该数字会更新。timestamp 值基于内部时钟，不对应真实时间。每个表只能有一个 timestamp 变量。</td>\n<td align=\"left\"></td>\n</tr>\n</tbody></table>\n<p><strong>其他数据类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">sql_variant</td>\n<td align=\"left\">存储最多 8,000 字节不同数据类型的数据，除了 text、ntext 以及 timestamp。</td>\n</tr>\n<tr>\n<td align=\"left\">uniqueidentifier</td>\n<td align=\"left\">存储全局唯一标识符 (GUID)。</td>\n</tr>\n<tr>\n<td align=\"left\">xml</td>\n<td align=\"left\">存储 XML 格式化数据。最多 2GB。</td>\n</tr>\n<tr>\n<td align=\"left\">cursor</td>\n<td align=\"left\">存储对用于数据库操作的指针的引用。</td>\n</tr>\n<tr>\n<td align=\"left\">table</td>\n<td align=\"left\">存储结果集，供稍后处理。</td>\n</tr>\n</tbody></table>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p>[^1]: <a href=\"https://www.runoob.com/sql/sql-datatypes.html\">菜鸟教程——SQL 用于各种数据库的数据类型</a> </p>\n","text":"MYSQL数据类型菜鸟教程[^1]中给出了几款主流数据库软件的数据类型这一篇中我们着重讲MySQL 数据类型在 MySQL 中，有三种主要的类型：Text（文本）、Number（数字）和 Date/Time（日期/时间）类型。Text 类型：数据类型描述CHAR(size)保存固","link":"","raw":null,"photos":[],"categories":[{"name":"Mysql","slug":"Mysql","count":2,"path":"api/categories/Mysql.json"}],"tags":[{"name":"mysql","slug":"mysql","count":2,"path":"api/tags/mysql.json"},{"name":"数据存储","slug":"数据存储","count":2,"path":"api/tags/数据存储.json"}]},{"title":"express框架下使用ejs模板","slug":"express框架下使用ejs模板","date":"2021-09-03T10:14:57.108Z","updated":"2021-09-03T10:17:20.834Z","comments":true,"path":"api/articles/express框架下使用ejs模板.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"express框架下使用ejs模板\"><a href=\"#express框架下使用ejs模板\" class=\"headerlink\" title=\"express框架下使用ejs模板\"></a>express框架下使用ejs模板</h1><h2 id=\"ejs模板\"><a href=\"#ejs模板\" class=\"headerlink\" title=\"ejs模板\"></a>ejs模板</h2><p><a href=\"https://ejs.bootcss.com/#docs\">ejs官方文档</a><a href=\"%5Bejs%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%5D(https://ejs.bootcss.com/#docs)\">^1</a>中，对于其的描述为：</p>\n<blockquote>\n<p>EJS 是一套简单的模板语言，帮你利用普通的 JavaScript 代码生成 HTML 页面。EJS 没有如何组织内容的教条；也没有再造一套迭代和控制流语法；有的只是普通的 JavaScript 代码而已。</p>\n<p>利用 NPM 安装 EJS 很简单。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install ejs</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2>","text":"express框架下使用ejs模板ejs模板ejs官方文档^1中，对于其的描述为：EJS 是一套简单的模板语言，帮你利用普通的 JavaScript 代码生成 HTML 页面。EJS 没有如何组织内容的教条；也没有再造一套迭代和控制流语法；有的只是普通的 JavaScript 代","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":15,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"JavaScript","slug":"Programming-languages-and-projects/JavaScript","count":6,"path":"api/categories/Programming-languages-and-projects/JavaScript.json"},{"name":"Nodejs","slug":"Programming-languages-and-projects/JavaScript/Nodejs","count":3,"path":"api/categories/Programming-languages-and-projects/JavaScript/Nodejs.json"}],"tags":[{"name":"nodejs","slug":"nodejs","count":3,"path":"api/tags/nodejs.json"},{"name":"ejs","slug":"ejs","count":1,"path":"api/tags/ejs.json"},{"name":"express","slug":"express","count":1,"path":"api/tags/express.json"}]},{"title":"Git第一次与远程仓库关联并push时的报错","slug":"Git第一次与远程仓库关联并push时的报错","date":"2021-09-02T23:32:48.083Z","updated":"2021-09-02T23:51:18.357Z","comments":true,"path":"api/articles/Git第一次与远程仓库关联并push时的报错.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Git第一次与远程仓库关联并push时的报错\"><a href=\"#Git第一次与远程仓库关联并push时的报错\" class=\"headerlink\" title=\"Git第一次与远程仓库关联并push时的报错\"></a>Git第一次与远程仓库关联并push时的报错</h1><h2 id=\"关于该debug的过程描述\"><a href=\"#关于该debug的过程描述\" class=\"headerlink\" title=\"关于该debug的过程描述\"></a>关于该debug的过程描述</h2><p>当我们在github建立一个远程仓库时，github会给予我们相应的quick start提示：</p>\n<blockquote>\n<h3 id=\"…or-create-a-new-repository-on-the-command-line\"><a href=\"#…or-create-a-new-repository-on-the-command-line\" class=\"headerlink\" title=\"…or create a new repository on the command line\"></a>…or create a new repository on the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;# ejs_express_demo&quot; &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin https://github.com/JustSkim/ejs_express_demo.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n<h3 id=\"…or-push-an-existing-repository-from-the-command-line\"><a href=\"#…or-push-an-existing-repository-from-the-command-line\" class=\"headerlink\" title=\"…or push an existing repository from the command line\"></a>…or push an existing repository from the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/JustSkim/ejs_express_demo.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n<h3 id=\"…or-import-code-from-another-repository\"><a href=\"#…or-import-code-from-another-repository\" class=\"headerlink\" title=\"…or import code from another repository\"></a>…or import code from another repository</h3><p>You can initialize this repository with code from a Subversion, Mercurial, or TFS project.<br><a href=\"https://github.com//ejs_express_demo/import\">Import code</a></p>\n</blockquote>\n<blockquote>\n<p>$ git init<br>Initialized empty Git repository in E:/JS练习/ejs_demo/.git/</p>\n</blockquote>\n<p>首先，创建一个 Git 仓库</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git commit -m “no useful file first commit”<br>On branch master<br>Initial commit<br>Untracked files:<br>     .gitignore<br>    package.json</p>\n<p>   nothing added to commit but untracked files present</p>\n</blockquote>\n<p>然后，提交暂存区到本地仓库。<br>事实上，我们第一次使用在该文件夹中使用该git commit命令出现了差错：<br>**Untracked files  … nothing added to commit but untracked files present **<br>一般而言，第一次执行提交暂存区到本地仓库的操作，如果使用<code>git commit -m &quot;description&quot;</code> 而不是<code>git commit -a -m &quot;description&quot;</code>，是不会出现该错误的[^1]。</p>\n<p>对于我们这种情况，出现该差错的原因在于：在我们每次使用 git commit 命令之前，<br>使用 git add 跟踪一个文件，并且将其纳入暂存区。git add使用文件或者目录作为参数，如果参数是目录，那么会递归地跟踪该目录下左右文件（为”.”，则跟踪目录下所有未被.gitignore排除的文件）[^2]。</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$git remote add origin <a href=\"mailto:&#x67;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;\">&#x67;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;</a>:JustSkim/ejs_express_demo.git</p>\n</blockquote>\n<p>添加名为origind 远程版本库：</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git push -u origin main<br>error: src refspec main does not match any.<br>error: failed to push some refs to ‘<a href=\"mailto:&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#109;\">&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#109;</a>:JustSkim/ejs_express_demo.git’</p>\n</blockquote>\n<p>这里push失败，我们尝试改为https的连接方式（事实证明这对于解决问题是起不到帮助的）<br>（但是当网络环境差导致多次Push失败时，建议更改连接方式）</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git remote set-url origin <a href=\"https://github.com/JustSkim/ejs_express_demo.git\">https://github.com/JustSkim/ejs_express_demo.git</a></p>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git push -u origin master<br>error: src refspec master does not match any.<br>error: failed to push some refs to ‘<a href=\"https://github.com/JustSkim/ejs_express_demo.git&#39;\">https://github.com/JustSkim/ejs_express_demo.git&#39;</a></p>\n</blockquote>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git branch -a</p>\n</blockquote>\n<p>由于之前的错误，存在未被跟踪的文件导致提交失败，因此在这里，无论使用命令“git branch”还是”git branch -a“，都没有列出任何分支</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git add .<br>warning: LF will be replaced by CRLF in package.json.<br>The file will have its original line endings in your working directory.</p>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git log<br>fatal: your current branch ‘master’ does not have any commits yet</p>\n</blockquote>\n<p>我们重新跟踪文件<br>这里日志提示我们 ”该master分支下至今没有任何提交“</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git commit -m “no file”<br>[master (root-commit) 7bbefea] no file<br>warning: LF will be replaced by CRLF in package.json.<br>The file will have its original line endings in your working directory.<br>2 files changed, 16 insertions(+)<br>create mode 100644 .gitignore<br>create mode 100644 package.json</p>\n</blockquote>\n<p>好了，这一次我们提交成功了</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git branch<br>*master</p>\n</blockquote>\n<p>可以看到master分支存在</p>\n<blockquote>\n<p>User@TAPTOP-N5PIO<br>$ git push origin master<br>Counting objects: 4, done.<br>Delta compression using up to 16 threads.<br>Compressing objects: 100% (3/3), done.<br>Writing objects: 100% (4/4), 445 bytes | 0 bytes/s, done.<br>Total 4 (delta 0), reused 0 (delta 0)<br>To <a href=\"https://github.com/JustSkim/ejs_express_demo.git\">https://github.com/JustSkim/ejs_express_demo.git</a></p>\n<ul>\n<li>[new branch]      master -&gt; master</li>\n</ul>\n</blockquote>\n<p>代码成功推送到远程仓库</p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p>[^1]: <a href=\"https://www.jianshu.com/p/61c3db30d488\">git commit -a -m “提交报错”</a><br>[^2]: <a href=\"https://www.jianshu.com/p/4d642a42414a\">git提交报错nothing added to commit but untracked files present</a>  </p>\n","text":"Git第一次与远程仓库关联并push时的报错关于该debug的过程描述当我们在github建立一个远程仓库时，github会给予我们相应的quick start提示：…or create a new repository on the command line1<br>2<br>","link":"","raw":null,"photos":[],"categories":[{"name":"Git","slug":"Git","count":2,"path":"api/categories/Git.json"},{"name":"Git报错处理","slug":"Git/Git报错处理","count":1,"path":"api/categories/Git/Git报错处理.json"}],"tags":[{"name":"git","slug":"git","count":1,"path":"api/tags/git.json"}]},{"title":"new Promise构造函数详解","slug":"new-Promise构造函数详解","date":"2021-08-31T07:27:48.096Z","updated":"2021-08-31T07:49:12.413Z","comments":true,"path":"api/articles/new-Promise构造函数详解.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"new-Promise构造函数详解\"><a href=\"#new-Promise构造函数详解\" class=\"headerlink\" title=\"new Promise构造函数详解\"></a>new Promise构造函数详解</h1><p>Promise 对象是 JavaScript 的异步操作解决方案，为异步操作提供统一接口[^1]。它起到代理作用（proxy），充当异步操作与回调函数之间的中介，使得异步操作具备同步操作的接口。Promise 可以让异步操作写起来，就像在写同步操作的流程（链式操作），而不必一层层地嵌套回调函数。</p>\n<p>Promise是一个对象，也是一个构造函数，在ES6中，加入了Promise，其设计思想是：所有异步任务都返回一个 Promise 实例。而每个Promise 实例又都有一个<code>then</code>方法，用来指定下一步的回调函数。<br>如果不使用Promise，我们往往要使用很多层回调的写法，下面做一个对比：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 传统写法</span></span><br><span class=\"line\">step1(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value1</span>) </span>&#123;</span><br><span class=\"line\">  step2(value1, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value2</span>) </span>&#123;</span><br><span class=\"line\">    step3(value2, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value3</span>) </span>&#123;</span><br><span class=\"line\">      step4(value3, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value4</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Promise 的写法</span></span><br><span class=\"line\">(<span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(step1))</span><br><span class=\"line\">  .then(step2)</span><br><span class=\"line\">  .then(step3)</span><br><span class=\"line\">  .then(step4);</span><br></pre></td></tr></table></figure>\n\n<p>Promise的构造函数接收一个参数，是函数，并且传入两个参数：resolve，reject，分别表示异步操作执行成功后的回调函数和异步操作执行失败后的回调函数。按照标准来讲，resolve是将Promise的状态置为fullfiled，reject是将Promise的状态置为rejected。<strong>注意，Promise对象通过自身的状态来控制异步操作！</strong></p>\n<p>根据mdn官方网站上的讲解：</p>\n<blockquote>\n<p>一个 <code>Promise</code> 对象代表一个在这个 promise 被创建出来时不一定已知的值。它让您能够把异步操作最终的成功返回值或者失败原因和相应的处理程序关联起来。 这样使得异步方法可以像同步方法那样返回值：异步方法并不会立即返回最终的值，而是会返回一个 <em>promise</em>，以便在未来某个时候把值交给使用者。<br>一个 <code>Promise</code> 必然处于以下几种状态之一：</p>\n<ul>\n<li><p><em>待定（pending）</em>: 初始状态，既没有被兑现，也没有被拒绝。</p>\n</li>\n<li><p><em>已兑现（fulfilled）</em>: 意味着操作成功完成。</p>\n</li>\n<li><p><em>已拒绝（rejected）</em>: 意味着操作失败。</p>\n</li>\n</ul>\n<p> 其中，状态fulfilled和rejected合在一起称为resolved（已定型），这三种的状态的变化途径只有两种：</p>\n<ul>\n<li><p>从“未完成”到“成功”——异步操作成功，Promise 实例传回一个值（value），状态变为fulfilled。</p>\n</li>\n<li><p>从“未完成”到“失败”——异步操作失败，Promise 实例抛出一个错误（error），状态变为rejected。</p>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>注意！一个Promise对象的状态发生一次变化，就凝固了，不会再有新的状态变化！这也是 Promise 这个名字的由来，它的英语意思是“承诺”，一旦承诺成效，就不得再改变了。这也意味着，<strong>Promise 实例的状态变化只可能发生一次</strong>。</p>\n<p>当两个途径之一发生时，我们用 promise 的 then 方法排列起来的相关处理程序就会被调用。如果 promise 在一个相应的处理程序被绑定时就已经被兑现或被拒绝了，那么这个处理程序就会被调用，因此在完成异步操作和绑定处理方法之间不会存在竞争状态。</p>\n</blockquote>\n<h2 id=\"构造一个Promise实例\"><a href=\"#构造一个Promise实例\" class=\"headerlink\" title=\"构造一个Promise实例\"></a>构造一个Promise实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> promise = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"comment\">/* 异步操作成功 */</span>)&#123;</span><br><span class=\"line\">    resolve(value);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">/* 异步操作失败 */</span></span><br><span class=\"line\">    reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>resolve</code>函数的作用是，将<code>Promise</code>实例的状态从“未完成”变为“成功”（即从<code>pending</code>变为<code>fulfilled</code>），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去。<code>reject</code>函数的作用是，将<code>Promise</code>实例的状态从“未完成”变为“失败”（即从<code>pending</code>变为<code>rejected</code>），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p>[^1]: <a href=\"https://javascript.ruanyifeng.com/advanced/promise.html\">Promise 对象</a></p>\n","text":"new Promise构造函数详解Promise 对象是 JavaScript 的异步操作解决方案，为异步操作提供统一接口[^1]。它起到代理作用（proxy），充当异步操作与回调函数之间的中介，使得异步操作具备同步操作的接口。Promise 可以让异步操作写起来，就像在写同步操","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":15,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"JavaScript","slug":"Programming-languages-and-projects/JavaScript","count":6,"path":"api/categories/Programming-languages-and-projects/JavaScript.json"},{"name":"Nodejs","slug":"Programming-languages-and-projects/JavaScript/Nodejs","count":3,"path":"api/categories/Programming-languages-and-projects/JavaScript/Nodejs.json"}],"tags":[{"name":"http","slug":"http","count":2,"path":"api/tags/http.json"},{"name":"nodejs","slug":"nodejs","count":3,"path":"api/tags/nodejs.json"}]},{"title":"nodejs中http相关方法","slug":"nodejs中http相关方法","date":"2021-08-31T06:25:35.662Z","updated":"2021-08-31T07:54:54.543Z","comments":true,"path":"api/articles/nodejs中http相关方法.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"nodejs中http相关方法\"><a href=\"#nodejs中http相关方法\" class=\"headerlink\" title=\"nodejs中http相关方法\"></a>nodejs中http相关方法</h1><h2 id=\"response相关\"><a href=\"#response相关\" class=\"headerlink\" title=\"response相关\"></a>response相关</h2><h3 id=\"http-response-end\"><a href=\"#http-response-end\" class=\"headerlink\" title=\"http.response.end\"></a>http.response.end</h3><p>原文链接<a href=\"https://www.jb51.net/article/58468.htm\">https://www.jb51.net/article/58468.htm</a></p>\n<blockquote>\n<p>http.response.end结束响应，告诉客户端所有消息已经发送。当所有要返回的内容发送完毕时，该函数必须被调用一次。<br>如果不调用该函数，客户端将永远处于等待状态。<br>语法：<br>response.end([data], [encoding])<br>接收参数：<br>data ： end()执行完毕后要输出的字符，如果指定了 data 的值，那就意味着在执行完 response.end() 之后，会接着执行一条 response.write(data , encoding);<br>encoding： 对应data的字符编码 </p>\n</blockquote>\n<h3 id=\"http-response-write\"><a href=\"#http-response-write\" class=\"headerlink\" title=\"http.response.write\"></a>http.response.write</h3><p>原文链接：<a href=\"https://www.jianshu.com/p/ab0889a387e6\">https://www.jianshu.com/p/ab0889a387e6</a><br>response.write(chunk, [encoding])<br>参数：chunk 是一个buffer 或 字符串，表示发送的内容encoding 如果chunk是字符串，就需要指定encoding来说明它的编码方式，默认utf-8<br>该函数用于向请求的客户端发送响应内容。在 response.end() 之前，response.write() 可以被执行多次。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">&#x27;/to&#x27;</span>,<span class=\"function\">(<span class=\"params\">req,resp</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    resp.write(<span class=\"string\">&quot;JQK&quot;</span>);</span><br><span class=\"line\">    resp.end(<span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>后续的response.end(data)并不会覆盖之前response.write(data)的值</p>\n","text":"nodejs中http相关方法response相关http.response.end原文链接https://www.jb51.net/article/58468.htmhttp.response.end结束响应，告诉客户端所有消息已经发送。当所有要返回的内容发送完毕时，该函数必须","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":15,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"JavaScript","slug":"Programming-languages-and-projects/JavaScript","count":6,"path":"api/categories/Programming-languages-and-projects/JavaScript.json"},{"name":"Nodejs","slug":"Programming-languages-and-projects/JavaScript/Nodejs","count":3,"path":"api/categories/Programming-languages-and-projects/JavaScript/Nodejs.json"}],"tags":[{"name":"http","slug":"http","count":2,"path":"api/tags/http.json"},{"name":"nodejs","slug":"nodejs","count":3,"path":"api/tags/nodejs.json"}]},{"title":"PYQT5绘图","slug":"PYQT5绘图","date":"2021-08-30T21:32:57.313Z","updated":"2021-08-30T21:33:03.986Z","comments":true,"path":"api/articles/PYQT5绘图.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"PYQT5绘图\"><a href=\"#PYQT5绘图\" class=\"headerlink\" title=\"PYQT5绘图\"></a>PYQT5绘图</h1><h2 id=\"绘图\"><a href=\"#绘图\" class=\"headerlink\" title=\"绘图\"></a>绘图</h2><h3 id=\"文本涂鸦\"><a href=\"#文本涂鸦\" class=\"headerlink\" title=\"文本涂鸦\"></a>文本涂鸦</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：文本涂鸦</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we draw text in Russian Cylliric.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QWidget, QApplication</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QPainter, QColor, QFont</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        self.text = <span class=\"string\">&quot;Лев Николаевич Толстой\\nАнна Каренина&quot;</span></span><br><span class=\"line\">        <span class=\"comment\">#写了一些文本上下居中对齐的俄罗斯Cylliric语言的文字</span></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">500</span>, <span class=\"number\">500</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Drawing text&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">paintEvent</span>(<span class=\"params\">self, event</span>):</span></span><br><span class=\"line\">        <span class=\"comment\">#在绘画事件内完成绘画动作</span></span><br><span class=\"line\">        qp = QPainter()</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        QPainter是低级的绘画类。所有的绘画动作都在这个类的begin()和end()方法之间完成，绘画动作都封装在drawText()内部了。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        qp.begin(self)</span><br><span class=\"line\">        self.drawText(event, qp)</span><br><span class=\"line\">        qp.end()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawText</span>(<span class=\"params\">self, event, qp</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        qp.setPen(QColor(<span class=\"number\">168</span>, <span class=\"number\">34</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">        qp.setFont(QFont(<span class=\"string\">&#x27;Decorative&#x27;</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        为文字绘画定义了笔和字体。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        qp.drawText(event.rect(), Qt.AlignCenter, self.text)        </span><br><span class=\"line\">        <span class=\"comment\">#drawText()方法在窗口里绘制文本，rect()方法返回要更新的矩形区域</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>","text":"PYQT5绘图绘图文本涂鸦1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<b","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":15,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"Python3","slug":"Programming-languages-and-projects/Python3","count":9,"path":"api/categories/Programming-languages-and-projects/Python3.json"},{"name":"PYQT5","slug":"Programming-languages-and-projects/Python3/PYQT5","count":9,"path":"api/categories/Programming-languages-and-projects/Python3/PYQT5.json"}],"tags":[{"name":"python3","slug":"python3","count":9,"path":"api/tags/python3.json"},{"name":"gui","slug":"gui","count":9,"path":"api/tags/gui.json"}]},{"title":"PYQT5拖拽","slug":"PYQT5拖拽","date":"2021-08-30T21:31:39.560Z","updated":"2021-08-30T21:31:57.703Z","comments":true,"path":"api/articles/PYQT5拖拽.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"PYQT5拖拽\"><a href=\"#PYQT5拖拽\" class=\"headerlink\" title=\"PYQT5拖拽\"></a>PYQT5拖拽</h1><h2 id=\"简单的拖放\"><a href=\"#简单的拖放\" class=\"headerlink\" title=\"简单的拖放\"></a>简单的拖放</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：拖放</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">This is a simple drag and</span></span><br><span class=\"line\"><span class=\"string\">drop example. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com</span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QPushButton, QWidget, </span><br><span class=\"line\">    QLineEdit, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Button</span>(<span class=\"params\">QPushButton</span>):</span></span><br><span class=\"line\">    <span class=\"comment\">#用QPushButton上构造一个按钮实例</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, title, parent</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(title, parent)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setAcceptDrops(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        激活组件的拖拽事件</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dragEnterEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        重构了dragEnterEvent()方法。设定好接受拖拽的数据类型（plain text）</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> e.mimeData().hasFormat(<span class=\"string\">&#x27;text/plain&#x27;</span>):</span><br><span class=\"line\">            e.accept()</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            e.ignore() </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dropEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\">        <span class=\"comment\">#重构dropEvent()方法，更改按钮接受鼠标的释放事件的默认行为。</span></span><br><span class=\"line\">        self.setText(e.mimeData().text()) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        edit = QLineEdit(<span class=\"string\">&#x27;line-edit&#x27;</span>, self)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        QLineEdit默认支持拖拽操作，所以我们只要调用setDragEnabled()方法使用就行了。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        edit.setDragEnabled(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        edit.move(<span class=\"number\">30</span>, <span class=\"number\">65</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        button = Button(<span class=\"string\">&quot;Button&quot;</span>, self)</span><br><span class=\"line\">        button.move(<span class=\"number\">190</span>, <span class=\"number\">65</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Simple drag and drop&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    ex.show()</span><br><span class=\"line\">    app.exec_()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"拖放按钮组件\"><a href=\"#拖放按钮组件\" class=\"headerlink\" title=\"拖放按钮组件\"></a>拖放按钮组件</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：拖放按钮组件  注意是右键拖拽！！！</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this program, we can press on a button with a left mouse</span></span><br><span class=\"line\"><span class=\"string\">click or drag and drop the button with  the right mouse click. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com</span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">例子中，窗口上有一个QPushButton组件。</span></span><br><span class=\"line\"><span class=\"string\">左键点击按钮，控制台就会输出press。右键可以点击然后拖动按钮。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QPushButton, QWidget, QApplication</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt, QMimeData</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QDrag</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Button</span>(<span class=\"params\">QPushButton</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, title, parent</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__(title, parent)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    从QPushButton继承一个Button类，然后重构QPushButton的两个方法: mouseMoveEvent()和mousePressEvent().</span></span><br><span class=\"line\"><span class=\"string\">    mouseMoveEvent()是拖拽开始的事件。</span></span><br><span class=\"line\"><span class=\"string\">    mousePressEvent()是鼠标给予压力的事件，分鼠标左键、右键、滚轮、前进键、后退键（不包含dpi键）</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mouseMoveEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\">        <span class=\"comment\">#这里只劫持按钮的右键事件（Qt.RightButton），左键的操作还是默认行为</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> e.buttons() != Qt.RightButton:</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">        mimeData = QMimeData()</span><br><span class=\"line\"></span><br><span class=\"line\">        drag = QDrag(self)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        创建一个QDrag对象，用来传输MIME-based数据。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        drag.setMimeData(mimeData)</span><br><span class=\"line\">        drag.setHotSpot(e.pos() - self.rect().topLeft())</span><br><span class=\"line\"></span><br><span class=\"line\">        dropAction = drag.exec_(Qt.MoveAction)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mousePressEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().mousePressEvent(e)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> e.button() == Qt.LeftButton:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;press&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.button())</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        左键点击按钮，会在控制台输出“press”。注意，我们在父级上也调用了mousePressEvent()方法，</span></span><br><span class=\"line\"><span class=\"string\">        不然的话，我们是看不到按钮按下的效果的。</span></span><br><span class=\"line\"><span class=\"string\">        mousePressEvent()是鼠标给予压力的事件，各个键有对应的int值（e.button()）</span></span><br><span class=\"line\"><span class=\"string\">        分鼠标左键（Qt.leftButton = 1）、右键（2）、滚轮（4）、前进键（16）、后退键（8） （不包含dpi键）</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.setAcceptDrops(<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.button = Button(<span class=\"string\">&#x27;Button&#x27;</span>, self)</span><br><span class=\"line\">        self.button.move(<span class=\"number\">100</span>, <span class=\"number\">65</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Click or Move&#x27;</span>)</span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">280</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dragEnterEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        e.accept()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dropEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        position = e.pos()</span><br><span class=\"line\">        self.button.move(position)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        在dropEvent()方法里，我们定义了按钮按下后和释放后的行为，获得鼠标移动的位置，然后把按钮放到这个地方</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        e.setDropAction(Qt.MoveAction)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        指定放下的动作类型为moveAction</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    ex.show()</span><br><span class=\"line\">    app.exec_()</span><br></pre></td></tr></table></figure>\n\n","text":"PYQT5拖拽简单的拖放1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":15,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"Python3","slug":"Programming-languages-and-projects/Python3","count":9,"path":"api/categories/Programming-languages-and-projects/Python3.json"},{"name":"PYQT5","slug":"Programming-languages-and-projects/Python3/PYQT5","count":9,"path":"api/categories/Programming-languages-and-projects/Python3/PYQT5.json"}],"tags":[{"name":"python3","slug":"python3","count":9,"path":"api/tags/python3.json"},{"name":"gui","slug":"gui","count":9,"path":"api/tags/gui.json"}]},{"title":"PYQT5控件","slug":"PYQT5控件","date":"2021-08-30T21:26:04.103Z","updated":"2021-08-30T21:30:33.641Z","comments":true,"path":"api/articles/PYQT5控件.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"PYQT5控件\"><a href=\"#PYQT5控件\" class=\"headerlink\" title=\"PYQT5控件\"></a>PYQT5控件</h1><h2 id=\"QCheckBox\"><a href=\"#QCheckBox\" class=\"headerlink\" title=\"QCheckBox\"></a>QCheckBox</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, a QCheckBox widget</span></span><br><span class=\"line\"><span class=\"string\">is used to toggle the title of a window.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QWidget, QCheckBox, QApplication</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        cb = QCheckBox(<span class=\"string\">&#x27;Show title&#x27;</span>, self)</span><br><span class=\"line\">        <span class=\"comment\">#QCheckBox的构造器，QCheckBox组件有两个状态：开和关</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        QCheckBox构造一个三态复选框</span></span><br><span class=\"line\"><span class=\"string\">        名称                值       含义</span></span><br><span class=\"line\"><span class=\"string\">        Qt.Checked\t        2\t 组件没有被选中（默认）</span></span><br><span class=\"line\"><span class=\"string\">        Qt.PartiallyChecked\t1 \t 组件被半选中</span></span><br><span class=\"line\"><span class=\"string\">        Qt.Unchecked\t    0    组件被选中</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        cb.move(<span class=\"number\">20</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;cb.toggle = &#x27;</span>,cb.toggle())</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        检查单选框的状态。默认情况下，窗口没有标题，单选框未选中</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtWidgets.QAbstractButton.toggled(checked)¶</span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        checked – bool</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        cb.stateChanged.connect(self.changeTitle)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtWidgets.QCheckBox.stateChanged(arg__1)¶</span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        arg__1 – int</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">250</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;QCheckBox&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">changeTitle</span>(<span class=\"params\">self, state</span>):</span></span><br><span class=\"line\">        <span class=\"comment\">#根据状态实现窗口标题切换的功能</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;state = &quot;</span>,state)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        Qt.Checked为int类型，值为2，代表组件没有被选中</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> state == Qt.Checked:</span><br><span class=\"line\">            self.setWindowTitle(<span class=\"string\">&#x27;QCheckBox&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.setWindowTitle(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"切换按钮\"><a href=\"#切换按钮\" class=\"headerlink\" title=\"切换按钮\"></a>切换按钮</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：切换按钮</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we create three toggle buttons.</span></span><br><span class=\"line\"><span class=\"string\">They will control the background color of a </span></span><br><span class=\"line\"><span class=\"string\">QFrame. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QPushButton, </span><br><span class=\"line\">    QFrame, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QColor</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        self.col = QColor(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)       </span><br><span class=\"line\"></span><br><span class=\"line\">        redb = QPushButton(<span class=\"string\">&#x27;Red&#x27;</span>, self)</span><br><span class=\"line\">        redb.setCheckable(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        redb.move(<span class=\"number\">10</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        redb.clicked[<span class=\"built_in\">bool</span>].connect(self.setColor)</span><br><span class=\"line\"></span><br><span class=\"line\">        greenb = QPushButton(<span class=\"string\">&#x27;Green&#x27;</span>, self)</span><br><span class=\"line\">        greenb.setCheckable(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        greenb.move(<span class=\"number\">10</span>, <span class=\"number\">60</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        greenb.clicked[<span class=\"built_in\">bool</span>].connect(self.setColor)</span><br><span class=\"line\"></span><br><span class=\"line\">        blueb = QPushButton(<span class=\"string\">&#x27;Blue&#x27;</span>, self)</span><br><span class=\"line\">        blueb.setCheckable(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        blueb.move(<span class=\"number\">10</span>, <span class=\"number\">110</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        blueb.clicked[<span class=\"built_in\">bool</span>].connect(self.setColor)</span><br><span class=\"line\">        <span class=\"comment\">#每一种颜色都与这一个设置色彩（RGB三项分别）的函数点击关联</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.square = QFrame(self)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        容器中的Frame为一个矩形的框架对象，对应类QFrame，</span></span><br><span class=\"line\"><span class=\"string\">        QFrame类是PyQt中带框架部件的所有类的基类，如菜单、进度条、Label标签</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.square.setGeometry(<span class=\"number\">150</span>, <span class=\"number\">20</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">        self.square.setStyleSheet(<span class=\"string\">&quot;QWidget &#123; background-color: %s &#125;&quot;</span> %  </span><br><span class=\"line\">            self.col.name())</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">280</span>, <span class=\"number\">170</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Toggle button&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setColor</span>(<span class=\"params\">self, pressed</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        source = self.sender()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> pressed:</span><br><span class=\"line\">            val = <span class=\"number\">255</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>: val = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> source.text() == <span class=\"string\">&quot;Red&quot;</span>:</span><br><span class=\"line\">            self.col.setRed(val)   </span><br><span class=\"line\">            <span class=\"comment\">#将RGB模式中红色值调为val=255             </span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> source.text() == <span class=\"string\">&quot;Green&quot;</span>:</span><br><span class=\"line\">            self.col.setGreen(val)             </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.col.setBlue(val) </span><br><span class=\"line\"></span><br><span class=\"line\">        self.square.setStyleSheet(<span class=\"string\">&quot;QFrame &#123; background-color: %s &#125;&quot;</span> % self.col.name())  </span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        使用样式表（就是CSS的SS）改变背景色</span></span><br><span class=\"line\"><span class=\"string\">        此处self.square是一个QFrame类</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtWidgets.QWidget.setStyleSheet(styleSheet)¶</span></span><br><span class=\"line\"><span class=\"string\">        Parameters： styleSheet – str</span></span><br><span class=\"line\"><span class=\"string\">        This property holds the widget’s style sheet.</span></span><br><span class=\"line\"><span class=\"string\">        The style sheet contains a textual description of customizations to the widget’s style, as described in the Qt Style Sheets document.</span></span><br><span class=\"line\"><span class=\"string\">        该函数可以设置样式（包括颜色、字体、边框等，类比于html中style属性）</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"滑块\"><a href=\"#滑块\" class=\"headerlink\" title=\"滑块\"></a>滑块</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：滑块</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">This example shows a QSlider widget.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QSlider, </span><br><span class=\"line\">    QLabel, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QPixmap</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        sld = QSlider(Qt.Horizontal, self)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        创建一个水平的QSlider</span></span><br><span class=\"line\"><span class=\"string\">        QSlider控件提供一个垂直或者水平的滑动条，滑动条是一个用于控制有界值典型的控件，</span></span><br><span class=\"line\"><span class=\"string\">        它允许用户沿水平或者垂直方向在某一范围内移动滑块，并将滑块所在的位置转换为一个合法范围内的整数值，</span></span><br><span class=\"line\"><span class=\"string\">        有时候这中方式比输入数字或者使用SpinBox（计数器·）更加自然，在槽函数中对滑块所在位置的处理相当于从整数之间的最小值和最高值进行取值</span></span><br><span class=\"line\"><span class=\"string\">        原文链接：https://blog.csdn.net/jia666666/article/details/81534588</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        sld.setFocusPolicy(Qt.NoFocus)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        setFocusPolicy(Policy)  设置焦点获取策略</span></span><br><span class=\"line\"><span class=\"string\">            Qt.TabFocus() 通过Tab键获取焦点</span></span><br><span class=\"line\"><span class=\"string\">            Qt.ClickFocus() 通过被单击获取焦点</span></span><br><span class=\"line\"><span class=\"string\">            Qt.StrongFocus()    可以通过上面两种方式获取焦点</span></span><br><span class=\"line\"><span class=\"string\">            Qt.NoFocus()    不能通过上面两种方式获取焦点</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        sld.setGeometry(<span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">100</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        setGeometry()有两个作用：</span></span><br><span class=\"line\"><span class=\"string\">        把窗口放到屏幕上；设置窗口大小。</span></span><br><span class=\"line\"><span class=\"string\">        四个参数分别代表屏幕坐标的x、y和窗口大小的宽、高。</span></span><br><span class=\"line\"><span class=\"string\">        这个方法是resize()和move()的合体。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        sld.valueChanged[<span class=\"built_in\">int</span>].connect(self.changeValue)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.label = QLabel(self)</span><br><span class=\"line\">        self.label.setPixmap(QPixmap(<span class=\"string\">&#x27;mute.png&#x27;</span>))</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        创建一个QLabel组件并给它设置一个静音图标(作为图标的默认设置)</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtWidgets.QLabel.setPixmap(arg__1)¶</span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        arg__1 – PySide2.QtGui.QPixmap</span></span><br><span class=\"line\"><span class=\"string\">        This property holds the label’s pixmap..</span></span><br><span class=\"line\"><span class=\"string\">        Previously, Qt provided a version of pixmap() which returned the pixmap by-pointer. That version is now deprecated. To maintain compatibility with old code, you can explicitly differentiate between the by-pointer function and the by-value function:</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">        QPixmap类用于绘图设备的图像显示，它可以作为一个QPainterDevice对象，也可以加载到一个控件中，通常是标签或者按钮，用于在标签或按钮上显示图像</span></span><br><span class=\"line\"><span class=\"string\">        QPixmap可以读取的图像文件类型有BMP，GIF，JPG等</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        self.label.setGeometry(<span class=\"number\">160</span>, <span class=\"number\">40</span>, <span class=\"number\">1000</span>, <span class=\"number\">800</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">2000</span>, <span class=\"number\">1600</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;QSlider&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">changeValue</span>(<span class=\"params\">self, value</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == <span class=\"number\">0</span>:</span><br><span class=\"line\">            self.label.setPixmap(QPixmap(<span class=\"string\">&#x27;mute.png&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> value &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> value &lt;= <span class=\"number\">30</span>:</span><br><span class=\"line\">            self.label.setPixmap(QPixmap(<span class=\"string\">&#x27;min.png&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> value &gt; <span class=\"number\">30</span> <span class=\"keyword\">and</span> value &lt; <span class=\"number\">80</span>:</span><br><span class=\"line\">            self.label.setPixmap(QPixmap(<span class=\"string\">&#x27;med.png&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.label.setPixmap(QPixmap(<span class=\"string\">&#x27;max.png&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"进度条\"><a href=\"#进度条\" class=\"headerlink\" title=\"进度条\"></a>进度条</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：进度条</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">This example shows a QProgressBar widget.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QProgressBar, </span><br><span class=\"line\">    QPushButton, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QBasicTimer</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        self.pbar = QProgressBar(self)</span><br><span class=\"line\">        <span class=\"comment\">#新建一个QProgressBar构造器。</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.pbar.setGeometry(<span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">200</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.btn = QPushButton(<span class=\"string\">&#x27;Start&#x27;</span>, self)</span><br><span class=\"line\">        self.btn.move(<span class=\"number\">40</span>, <span class=\"number\">80</span>)</span><br><span class=\"line\">        self.btn.clicked.connect(self.doAction)<span class=\"comment\">#点击绑定一个用来控制开始和停止的方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.timer = QBasicTimer()</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        用时间控制进度条。</span></span><br><span class=\"line\"><span class=\"string\">        QBasicTimer类为对象提供计时器事件。这是Qt内部使用的一个快速，轻量级和低级别的类。</span></span><br><span class=\"line\"><span class=\"string\">        注意这个定时器是一个重复的定时器，除非调用stop()函数，否则它将发送后续的定时器事件。</span></span><br><span class=\"line\"><span class=\"string\">        当定时器超时时，它将向QObject子类发送一个timer事件。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        self.step = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">280</span>, <span class=\"number\">170</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;QProgressBar&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">timerEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        每个QObject和又它继承而来的对象都有一个timerEvent()事件处理函数。</span></span><br><span class=\"line\"><span class=\"string\">        为了触发事件，我们重载（≠重写）了这个方法。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.step &gt;= <span class=\"number\">100</span>:</span><br><span class=\"line\">            self.timer.stop()</span><br><span class=\"line\">            <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">            PySide2.QtCore.QBasicTimer.stop()¶</span></span><br><span class=\"line\"><span class=\"string\">                No parameters.</span></span><br><span class=\"line\"><span class=\"string\">                Stops the timer.</span></span><br><span class=\"line\"><span class=\"string\">            &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">            self.btn.setText(<span class=\"string\">&#x27;Finished&#x27;</span>) <span class=\"comment\">#改变按钮控件的text值</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.step = self.step + <span class=\"number\">1</span></span><br><span class=\"line\">        self.pbar.setValue(self.step)<span class=\"comment\">#设置值</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">doAction</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.timer.isActive():</span><br><span class=\"line\">            self.timer.stop()</span><br><span class=\"line\">            self.btn.setText(<span class=\"string\">&#x27;Start&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.timer.start(<span class=\"number\">100</span>, self)</span><br><span class=\"line\">            <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">            调用start()方法加载时间事件，这个方法有两个参数：过期时间（单位：毫秒）和事件接收者</span></span><br><span class=\"line\"><span class=\"string\">            start(int, QObject)</span></span><br><span class=\"line\"><span class=\"string\">            &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">            self.btn.setText(<span class=\"string\">&#x27;Stop&#x27;</span>)<span class=\"comment\">#按钮文字改为“Stop”</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"日历\"><a href=\"#日历\" class=\"headerlink\" title=\"日历\"></a>日历</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：日历</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">This example shows a QCalendarWidget widget.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QCalendarWidget, </span><br><span class=\"line\">    QLabel, QApplication, QVBoxLayout)</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> QDate</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        vbox = QVBoxLayout(self)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        QHBoxLayout和QVBoxLayout类继承自QBoxLayout，采用QBOXLayout类可以在水平和垂直方向上排列控件，</span></span><br><span class=\"line\"><span class=\"string\">        本案例采用QHBoxLayout类，按照从左到右的顺序来添加控件，</span></span><br><span class=\"line\"><span class=\"string\">        详见博客https://blog.csdn.net/jia666666/article/details/81699900</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        cal = QCalendarWidget(self)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        创建一个QCalendarWidge</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        cal.setGridVisible(<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"comment\">#setGridVisible(bool)方法可以设置是否在日历上显示网格</span></span><br><span class=\"line\"></span><br><span class=\"line\">        cal.clicked[QDate].connect(self.showDate)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        选择一个日期时，QDate的点击信号就触发了，把这个信号和我们自己定义的showDate()方法关联起来</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        vbox.addWidget(cal)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.lbl = QLabel(self)</span><br><span class=\"line\"></span><br><span class=\"line\">        date = cal.selectedDate()</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        selectedDate()方法获取日历控件选中的日期(格式为一个QDate日期对象)</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtWidgets.QCalendarWidget.selectedDate()¶</span></span><br><span class=\"line\"><span class=\"string\">        Return type</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtCore.QDate</span></span><br><span class=\"line\"><span class=\"string\">        This property holds the currently selected date..</span></span><br><span class=\"line\"><span class=\"string\">        The selected date must be within the date range specified by the minimumDate and maximumDate properties. By default, the selected date is the current date.</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.lbl.setText(date.toString())<span class=\"comment\">#将该日期对象转换为字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">        vbox.addWidget(self.lbl)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setLayout(vbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">350</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Calendar&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">showDate</span>(<span class=\"params\">self, date</span>):</span>     </span><br><span class=\"line\"></span><br><span class=\"line\">        self.lbl.setText(date.toString())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：图片处理</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we dispay an image</span></span><br><span class=\"line\"><span class=\"string\">on the window. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QHBoxLayout, </span><br><span class=\"line\">    QLabel, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QPixmap</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        hbox = QHBoxLayout(self)</span><br><span class=\"line\">        pixmap = QPixmap(<span class=\"string\">&quot;exit.png&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\">#创建一个QPixmap对象，接收一个文件作为参数。</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        QPixmap类用于绘图设备的图像显示，它可以作为一个QPainterDevice对象，也可以加载到一个控件中，通常是标签或者按钮，用于在标签或按钮上显示图像</span></span><br><span class=\"line\"><span class=\"string\">QPixmap可以读取的图像文件类型有BMP，GIF，JPG等</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        lbl = QLabel(self)</span><br><span class=\"line\">        lbl.setPixmap(pixmap)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        把QPixmap实例放到QLabel组件里。</span></span><br><span class=\"line\"><span class=\"string\">        注意，组件大小 必须大于等于 QPixmap这个控件大小（也即图片大小）</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtWidgets.QLabel.setPixmap(arg__1)¶</span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        arg__1 – PySide2.QtGui.QPixmap</span></span><br><span class=\"line\"><span class=\"string\">        This property holds the label’s pixmap..</span></span><br><span class=\"line\"><span class=\"string\">        Previously, Qt provided a version of pixmap() which returned the pixmap by-pointer. That version is now deprecated. To maintain compatibility with old code, you can explicitly differentiate between the by-pointer function and the by-value function:</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        hbox.addWidget(lbl)</span><br><span class=\"line\">        self.setLayout(hbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.move(<span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Red Rock&#x27;</span>)</span><br><span class=\"line\">        self.show()        </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"行编辑\"><a href=\"#行编辑\" class=\"headerlink\" title=\"行编辑\"></a>行编辑</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：行编辑</span></span><br><span class=\"line\"><span class=\"string\">让标签的文本与输入文本相同</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">This example shows text which </span></span><br><span class=\"line\"><span class=\"string\">is entered in a QLineEdit</span></span><br><span class=\"line\"><span class=\"string\">in a QLabel widget.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">例子中展示了一个编辑组件和一个标签，我们在输入框里键入的文本，会立即在标签里显示出来</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QLabel, </span><br><span class=\"line\">    QLineEdit, QApplication)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        self.lbl = QLabel(self)</span><br><span class=\"line\"></span><br><span class=\"line\">        qle = QLineEdit(self)</span><br><span class=\"line\">        <span class=\"comment\">#创建一个QLineEdit对象。</span></span><br><span class=\"line\"></span><br><span class=\"line\">        qle.move(<span class=\"number\">60</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">        self.lbl.move(<span class=\"number\">60</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        qle.textChanged[<span class=\"built_in\">str</span>].connect(self.onChanged)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        输入框的值有变化时调用我们自己创建的一个方法。</span></span><br><span class=\"line\"><span class=\"string\">        QLineEdit类中的常用信号textChanged：当修改文本内容时，这个信号就会发射</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">280</span>, <span class=\"number\">170</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;QLineEdit&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">onChanged</span>(<span class=\"params\">self, text</span>):</span></span><br><span class=\"line\">        <span class=\"comment\">#把文本框里的值赋值给了标签组件，然后调用adjustSize()方法让标签自适应文本内容</span></span><br><span class=\"line\">        self.lbl.setText(text)  <span class=\"comment\">#改变标签的文本</span></span><br><span class=\"line\">        self.lbl.adjustSize()   <span class=\"comment\">#adjustSize() 根据内容自适应大小</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"QSplitter\"><a href=\"#QSplitter\" class=\"headerlink\" title=\"QSplitter\"></a>QSplitter</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：splitter 分束器————窗口分隔</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">This example shows</span></span><br><span class=\"line\"><span class=\"string\">how to use QSplitter widget.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">QSplitter组件能让用户通过 拖拽分割线 的方式改变子窗口大小的组件。本例中我们展示用两个分割线隔开的三个QFrame组件。</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QHBoxLayout, QFrame,</span><br><span class=\"line\">                             QSplitter, QApplication)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        hbox = QHBoxLayout(self)</span><br><span class=\"line\"></span><br><span class=\"line\">        topleft = QFrame(self)</span><br><span class=\"line\">        topleft.setFrameShape(QFrame.StyledPanel)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        为了更清楚的看到分割线，我们使用了设置好的子窗口样式。</span></span><br><span class=\"line\"><span class=\"string\">        QFrame的相关值与表现形式可见 http://allstack.net/wordpress/post-918.html</span></span><br><span class=\"line\"><span class=\"string\">        注意这里是 StyledPanel 而不是style!</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        topright = QFrame(self)</span><br><span class=\"line\">        topright.setFrameShape(QFrame.StyledPanel)</span><br><span class=\"line\"></span><br><span class=\"line\">        bottom = QFrame(self)</span><br><span class=\"line\">        bottom.setFrameShape(QFrame.StyledPanel)</span><br><span class=\"line\"></span><br><span class=\"line\">        splitter1 = QSplitter(Qt.Horizontal)</span><br><span class=\"line\">        splitter1.addWidget(topleft)</span><br><span class=\"line\">        splitter1.addWidget(topright)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        创建一个QSplitter组件，并在里面添加了两个框架</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        splitter2 = QSplitter(Qt.Vertical)</span><br><span class=\"line\">        splitter2.addWidget(splitter1)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        在分割线里面再进行分割</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        splitter2.addWidget(bottom)</span><br><span class=\"line\"></span><br><span class=\"line\">        hbox.addWidget(splitter2)</span><br><span class=\"line\">        self.setLayout(hbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;QSplitter&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">onChanged</span>(<span class=\"params\">self, text</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.lbl.setText(text)</span><br><span class=\"line\">        self.lbl.adjustSize()        </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下拉选框\"><a href=\"#下拉选框\" class=\"headerlink\" title=\"下拉选框\"></a>下拉选框</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：组合下拉框</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">This example shows how to use </span></span><br><span class=\"line\"><span class=\"string\">a QComboBox widget.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">QComboBox组件能让用户在 多个选择项 中 选择 一个</span></span><br><span class=\"line\"><span class=\"string\">combo 意为 组合的意思</span></span><br><span class=\"line\"><span class=\"string\">combobox: 组合框；下拉列表框</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QLabel, </span><br><span class=\"line\">    QComboBox, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        self.lbl = QLabel(<span class=\"string\">&quot;Ubuntu&quot;</span>, self)</span><br><span class=\"line\"></span><br><span class=\"line\">        combo = QComboBox(self)</span><br><span class=\"line\">        combo.addItem(<span class=\"string\">&quot;Ubuntu&quot;</span>)  <span class=\"comment\">#添加选项</span></span><br><span class=\"line\">        combo.addItem(<span class=\"string\">&quot;Mandriva&quot;</span>)</span><br><span class=\"line\">        combo.addItem(<span class=\"string\">&quot;Fedora&quot;</span>)</span><br><span class=\"line\">        combo.addItem(<span class=\"string\">&quot;Arch&quot;</span>)</span><br><span class=\"line\">        combo.addItem(<span class=\"string\">&quot;Gentoo&quot;</span>)</span><br><span class=\"line\">        combo.addItems([<span class=\"string\">&quot;CentOS&quot;</span>,<span class=\"string\">&quot;Alibaba linux&quot;</span>])</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        addItem()\t添加一个下拉选项</span></span><br><span class=\"line\"><span class=\"string\">        addItems()\t从列表中添加下拉选项</span></span><br><span class=\"line\"><span class=\"string\">        Clear()\t删除下拉选项集合中的所有选项</span></span><br><span class=\"line\"><span class=\"string\">        count()\t返回下拉选项集合中的数目</span></span><br><span class=\"line\"><span class=\"string\">        currentText()\t返回选中选项的文本</span></span><br><span class=\"line\"><span class=\"string\">        itemText(i)\t获取索引为i的item的选项文本</span></span><br><span class=\"line\"><span class=\"string\">        currentIndex()\t返回选中项的索引</span></span><br><span class=\"line\"><span class=\"string\">        setItemText(int index,text)\t改变序列号为index的文本</span></span><br><span class=\"line\"><span class=\"string\">        原文链接：https://blog.csdn.net/jia666666/article/details/81534260</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        combo.move(<span class=\"number\">50</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">        self.lbl.move(<span class=\"number\">50</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        combo.activated[<span class=\"built_in\">str</span>].connect(self.onActivated)        </span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;QComboBox&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">onActivated</span>(<span class=\"params\">self, text</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.lbl.setText(text)</span><br><span class=\"line\">        self.lbl.adjustSize()  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>","text":"PYQT5控件QCheckBox1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>2","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":15,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"Python3","slug":"Programming-languages-and-projects/Python3","count":9,"path":"api/categories/Programming-languages-and-projects/Python3.json"},{"name":"PYQT5","slug":"Programming-languages-and-projects/Python3/PYQT5","count":9,"path":"api/categories/Programming-languages-and-projects/Python3/PYQT5.json"}],"tags":[{"name":"python3","slug":"python3","count":9,"path":"api/tags/python3.json"},{"name":"gui","slug":"gui","count":9,"path":"api/tags/gui.json"}]},{"title":"PYQT5对话框","slug":"PYQT5对话框","date":"2021-08-30T21:14:50.018Z","updated":"2021-08-30T21:14:50.022Z","comments":true,"path":"api/articles/PYQT5对话框.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"PYQT5对话框\"><a href=\"#PYQT5对话框\" class=\"headerlink\" title=\"PYQT5对话框\"></a>PYQT5对话框</h1><h2 id=\"输入文字\"><a href=\"#输入文字\" class=\"headerlink\" title=\"输入文字\"></a>输入文字</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：输入文字</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we receive data from</span></span><br><span class=\"line\"><span class=\"string\">a QInputDialog dialog. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Aauthor: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QPushButton, QLineEdit, </span><br><span class=\"line\">    QInputDialog, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.btn = QPushButton(<span class=\"string\">&#x27;Dialog&#x27;</span>, self)</span><br><span class=\"line\">        self.btn.move(<span class=\"number\">20</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">        self.btn.clicked.connect(self.showDialog)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.le = QLineEdit(self)</span><br><span class=\"line\">        self.le.move(<span class=\"number\">130</span>, <span class=\"number\">22</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">290</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Input dialog&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">showDialog</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;the type of return is : &quot;</span>,<span class=\"built_in\">type</span>(QInputDialog.getText(self, <span class=\"string\">&#x27;Input Dialog&#x27;</span>, </span><br><span class=\"line\">            <span class=\"string\">&#x27;Enter your name:&#x27;</span>)))</span><br><span class=\"line\">        text, ok = QInputDialog.getText(self, <span class=\"string\">&#x27;Input Dialog&#x27;</span>, </span><br><span class=\"line\">            <span class=\"string\">&#x27;Enter your name:&#x27;</span>)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        显示一个输入框的代码。第一个参数是输入框的标题，第二个参数是输入框的占位符。</span></span><br><span class=\"line\"><span class=\"string\">        对话框返回输入内容和一个布尔值，如果点击的是OK按钮，布尔值就返回True</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        python的解构语法（逗号在左，与封装语法相反）</span></span><br><span class=\"line\"><span class=\"string\">        把线性结构(列表，元组，字符串，bytes，baitarry)的元素解开，并顺序的赋给其他变量；</span></span><br><span class=\"line\"><span class=\"string\">        左边接纳的变量数要和右边解开的元素个数一致；</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        static PySide2.QtWidgets.QInputDialog.getText(parent, title, label[, echo=QLineEdit.Normal[, text=&quot;&quot;[, flags=Qt.WindowFlags()[, inputMethodHints=Qt.ImhNone]]]])¶</span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        parent – PySide2.QtWidgets.QWidget</span></span><br><span class=\"line\"><span class=\"string\">        title – str</span></span><br><span class=\"line\"><span class=\"string\">        label – str</span></span><br><span class=\"line\"><span class=\"string\">        echo – EchoMode</span></span><br><span class=\"line\"><span class=\"string\">        text – str</span></span><br><span class=\"line\"><span class=\"string\">        flags – WindowFlags</span></span><br><span class=\"line\"><span class=\"string\">        inputMethodHints – InputMethodHints</span></span><br><span class=\"line\"><span class=\"string\">        Return type：(str,bool)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">(QString, bool ok) QInputDialog.getText (QWidget parent, QString title, QString label, QLineEdit.EchoMode mode = QLineEdit.Normal, QString text = &#x27;&#x27;, Qt.WindowFlags flags = 0)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ok:</span><br><span class=\"line\">            self.le.setText(<span class=\"built_in\">str</span>(text))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"选取颜色\"><a href=\"#选取颜色\" class=\"headerlink\" title=\"选取颜色\"></a>选取颜色</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：选择颜色</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we select a color value</span></span><br><span class=\"line\"><span class=\"string\">from the QColorDialog and change the background</span></span><br><span class=\"line\"><span class=\"string\">color of a QFrame widget. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QPushButton, QFrame, </span><br><span class=\"line\">    QColorDialog, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QColor</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        col = QColor(<span class=\"number\">222</span>, <span class=\"number\">222</span>, <span class=\"number\">0</span>) </span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        这里通过rgb三项来设置默认的背景颜色为黄色，下面可以使用QColorDialog改变背景颜色</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.btn = QPushButton(<span class=\"string\">&#x27;Dialog&#x27;</span>, self)</span><br><span class=\"line\">        self.btn.move(<span class=\"number\">20</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.btn.clicked.connect(self.showDialog)   <span class=\"comment\">#点击事件绑定函数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.frm = QFrame(self)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        容器中的Frame为一个矩形的框架对象，对应类QFrame，</span></span><br><span class=\"line\"><span class=\"string\">        QFrame类是PyQt中带框架部件的所有类的基类，如菜单、进度条、Label标签</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.frm.setStyleSheet(<span class=\"string\">&quot;QWidget &#123; background-color: %s &#125;&quot;</span> </span><br><span class=\"line\">            % col.name())</span><br><span class=\"line\">        self.frm.setGeometry(<span class=\"number\">130</span>, <span class=\"number\">22</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>)            </span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">250</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Color dialog&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">showDialog</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        col = QColorDialog.getColor()</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        弹出一个QColorDialog对话框</span></span><br><span class=\"line\"><span class=\"string\">        Pops up a modal color dialog with the given window title (or “Select Color” if none is specified), lets the user choose a color, and returns that color. The color is initially set to initial . The dialog is a child of parent . </span></span><br><span class=\"line\"><span class=\"string\">        It returns an invalid (see isValid() ) color if the user cancels the dialog.</span></span><br><span class=\"line\"><span class=\"string\">        The options argument allows you to customize the dialog.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        调出一个调色板窗口，用户选定颜色后，该函数会用name ()方法返回颜色值</span></span><br><span class=\"line\"><span class=\"string\">        Return type: PySide2.QtGui.QColor  返回一个class类型</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">dir</span>(col):</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;--  &#x27;</span>,item,<span class=\"string\">&#x27;  --&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\">#打印该class中的属性、方法名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> col.isValid():</span><br><span class=\"line\">            <span class=\"comment\">#PySide2.QtGui.QColor.isValid()¶  Returns true if the color is valid; otherwise returns false .</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;RGB: &quot;</span>,col.name())</span><br><span class=\"line\">            <span class=\"comment\">#Returns the name of the color in the format “#RRGGBB”; i.e. a “#” character followed by three two-digit hexadecimal numbers.</span></span><br><span class=\"line\"></span><br><span class=\"line\">            self.frm.setStyleSheet(<span class=\"string\">&quot;QWidget &#123; background-color: %s &#125;&quot;</span></span><br><span class=\"line\">                % col.name())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"选择字体\"><a href=\"#选择字体\" class=\"headerlink\" title=\"选择字体\"></a>选择字体</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：选择字体</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we select a font name</span></span><br><span class=\"line\"><span class=\"string\">and change the font of a label. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QVBoxLayout, QPushButton, </span><br><span class=\"line\">    QSizePolicy, QLabel, QFontDialog, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        vbox = QVBoxLayout()</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        QHBoxLayout和QVBoxLayout类继承自QBoxLayout，采用QBOXLayout类可以在水平和垂直方向上排列控件，</span></span><br><span class=\"line\"><span class=\"string\">        本案例采用QHBoxLayout类，按照从左到右的顺序来添加控件，</span></span><br><span class=\"line\"><span class=\"string\">        详见博客https://blog.csdn.net/jia666666/article/details/81699900</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        btn = QPushButton(<span class=\"string\">&#x27;Dialog&#x27;</span>, self)</span><br><span class=\"line\">        btn.setSizePolicy(QSizePolicy.Fixed,</span><br><span class=\"line\">            QSizePolicy.Fixed)</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.move(<span class=\"number\">20</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        vbox.addWidget(btn)</span><br><span class=\"line\"></span><br><span class=\"line\">        btn.clicked.connect(self.showDialog)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.lbl = QLabel(<span class=\"string\">&#x27;Knowledge only matters&#x27;</span>, self) </span><br><span class=\"line\">        self.lbl.move(<span class=\"number\">130</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        vbox.addWidget(self.lbl)</span><br><span class=\"line\">        self.setLayout(vbox)          </span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">250</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Font dialog&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">showDialog</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        font, ok = QFontDialog.getFont()</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        创建了一个有一个按钮和一个标签的QFontDialog的对话框，我们可以使用这个功能修改字体样式.</span></span><br><span class=\"line\"><span class=\"string\">        getFont()方法返回一个字体名称和状态信息。状态信息有OK和其他两种。</span></span><br><span class=\"line\"><span class=\"string\">        static PySide2.QtWidgets.QFontDialog.getFont([parent=None])¶</span></span><br><span class=\"line\"><span class=\"string\">        Parameters</span></span><br><span class=\"line\"><span class=\"string\">        parent – PySide2.QtWidgets.QWidget</span></span><br><span class=\"line\"><span class=\"string\">        Return type</span></span><br><span class=\"line\"><span class=\"string\">        PyTuple</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ok:</span><br><span class=\"line\">            <span class=\"comment\">#如果点击OK，标签的字体就会随之更改</span></span><br><span class=\"line\">            self.lbl.setFont(font)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"选择文件\"><a href=\"#选择文件\" class=\"headerlink\" title=\"选择文件\"></a>选择文件</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：文件保存</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we select a file with a</span></span><br><span class=\"line\"><span class=\"string\">QFileDialog and display its contents</span></span><br><span class=\"line\"><span class=\"string\">in a QTextEdit.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QMainWindow, QTextEdit, </span><br><span class=\"line\">    QAction, QFileDialog, QApplication)</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QIcon</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QMainWindow</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    设置了一个文本编辑框，文本编辑框是基于QMainWindow组件的。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    本例中有一个菜单栏，一个置中的文本编辑框，一个状态栏。点击菜单栏选项会弹出一个QtGui.QFileDialog对话框，</span></span><br><span class=\"line\"><span class=\"string\">    在这个对话框里，你能选择文件，然后文件的内容就会显示在文本编辑框里。</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        self.textEdit = QTextEdit()</span><br><span class=\"line\">        self.setCentralWidget(self.textEdit)</span><br><span class=\"line\">        self.statusBar()</span><br><span class=\"line\"></span><br><span class=\"line\">        openFile = QAction(QIcon(<span class=\"string\">&#x27;open.png&#x27;</span>), <span class=\"string\">&#x27;Open&#x27;</span>, self)</span><br><span class=\"line\">        openFile.setShortcut(<span class=\"string\">&#x27;Ctrl+O&#x27;</span>)</span><br><span class=\"line\">        openFile.setStatusTip(<span class=\"string\">&#x27;Open new File&#x27;</span>)</span><br><span class=\"line\">        openFile.triggered.connect(self.showDialog)</span><br><span class=\"line\"></span><br><span class=\"line\">        menubar = self.menuBar()</span><br><span class=\"line\">        fileMenu = menubar.addMenu(<span class=\"string\">&#x27;&amp;File&#x27;</span>)</span><br><span class=\"line\">        fileMenu.addAction(openFile)       </span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">350</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;File dialog&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">showDialog</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        fname = QFileDialog.getOpenFileName(self, <span class=\"string\">&#x27;Open file&#x27;</span>, <span class=\"string\">&#x27;/home&#x27;</span>)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        弹出QFileDialog窗口。getOpenFileName()方法的第一个参数是说明文字，</span></span><br><span class=\"line\"><span class=\"string\">        第二个参数是默认打开的文件夹路径。默认情况下显示所有类型的文件。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> fname[<span class=\"number\">0</span>]:</span><br><span class=\"line\">            f = <span class=\"built_in\">open</span>(fname[<span class=\"number\">0</span>], <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">with</span> f:</span><br><span class=\"line\">                data = f.read()</span><br><span class=\"line\">                self.textEdit.setText(data)    </span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        读取选中的文件，并显示在文本编辑框内</span></span><br><span class=\"line\"><span class=\"string\">        注意只能读取二进制文件，如txt，html等</span></span><br><span class=\"line\"><span class=\"string\">        （但是打开HTML文件时，是渲染后的结果）</span></span><br><span class=\"line\"><span class=\"string\">        打开pdf,png格式图片时候，会报错如下：</span></span><br><span class=\"line\"><span class=\"string\">        UnicodeDecodeError: &#x27;gbk&#x27; codec can&#x27;t decode byte 0x89 in position 24: illegal multibyte sequence</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span>    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n","text":"PYQT5对话框输入文字1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":15,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"Python3","slug":"Programming-languages-and-projects/Python3","count":9,"path":"api/categories/Programming-languages-and-projects/Python3.json"},{"name":"PYQT5","slug":"Programming-languages-and-projects/Python3/PYQT5","count":9,"path":"api/categories/Programming-languages-and-projects/Python3/PYQT5.json"}],"tags":[{"name":"python3","slug":"python3","count":9,"path":"api/tags/python3.json"},{"name":"gui","slug":"gui","count":9,"path":"api/tags/gui.json"}]},{"title":"PYQT5事件与信号","slug":"PYQT5事件与信号","date":"2021-08-30T21:07:47.378Z","updated":"2021-08-30T21:08:00.898Z","comments":true,"path":"api/articles/PYQT5事件与信号.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"PYQT5事件与信号\"><a href=\"#PYQT5事件与信号\" class=\"headerlink\" title=\"PYQT5事件与信号\"></a>PYQT5事件与信号</h1><h2 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h2><p>根据<a href=\"https://maicss.gitbook.io/pyqt5-chinese-tutoral/shi-jian-he-xin-hao#shi-jian\">发布在gitbook网站上的中文博客</a><a href=\"%5B%E5%8F%91%E5%B8%83%E5%9C%A8gitbook%E7%BD%91%E7%AB%99%E4%B8%8A%E7%9A%84%E4%B8%AD%E6%96%87%E5%8D%9A%E5%AE%A2%5D(https://maicss.gitbook.io/pyqt5-chinese-tutoral/shi-jian-he-xin-hao#shi-jian)\">^1</a>讲解：</p>\n<blockquote>\n<p>signals and slots 被其他人翻译成信号和槽机制，(⊙o⊙)…我这里还是不翻译好了。<br>所有的应用都是事件驱动的。事件大部分都是由用户的行为产生的，当然也有其他的事件产生方式，比如网络的连接，窗口管理器或者定时器等。调用应用的exec_()方法时，应用会进入主循环，主循环会监听和分发事件。<br>在事件模型中，有三个角色：<br>事件源<br>事件<br>事件目标<br>事件源就是发生了状态改变的对象。事件是这个对象状态改变的内容。事件目标是事件想作用的目标。事件源绑定事件处理函数，然后作用于事件目标身上。<br>PyQt5处理事件方面有个signal and slot机制。Signals and slots用于对象间的通讯。事件触发的时候，发生一个signal，slot是用来被Python调用的。</p>\n</blockquote>\n<h2 id=\"信号-signal-与槽-slot\"><a href=\"#信号-signal-与槽-slot\" class=\"headerlink\" title=\"信号(signal)与槽(slot)\"></a>信号(signal)与槽(slot)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子： 信号、槽</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we connect a signal</span></span><br><span class=\"line\"><span class=\"string\">of a QSlider to a slot of a QLCDNumber. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: January 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QWidget, QLCDNumber, QSlider, </span><br><span class=\"line\">    QVBoxLayout, QApplication)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        lcd = QLCDNumber(self)</span><br><span class=\"line\">        sld = QSlider(Qt.Horizontal, self)</span><br><span class=\"line\"></span><br><span class=\"line\">        vbox = QVBoxLayout()</span><br><span class=\"line\">        vbox.addWidget(lcd)</span><br><span class=\"line\">        vbox.addWidget(sld)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setLayout(vbox)</span><br><span class=\"line\"></span><br><span class=\"line\">        sld.valueChanged.connect(lcd.display)</span><br><span class=\"line\">        <span class=\"comment\">#把滑块的变化和数字的变化绑定在一起</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">250</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Signal and slot&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"重构事件处理器\"><a href=\"#重构事件处理器\" class=\"headerlink\" title=\"重构事件处理器\"></a>重构事件处理器</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：重构事件处理器（用自己的覆盖库自带的）</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we reimplement an </span></span><br><span class=\"line\"><span class=\"string\">event handler. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QWidget, QApplication</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">250</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Event handler&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">keyPressEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        替换了事件处理器函数keyPressEvent()，按下esc键会退出程序</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> e.key() == Qt.Key_Escape:</span><br><span class=\"line\">            self.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"事件对象\"><a href=\"#事件对象\" class=\"headerlink\" title=\"事件对象\"></a>事件对象</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：事件对象</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we display the x and y </span></span><br><span class=\"line\"><span class=\"string\">coordinates of a mouse pointer in a label widget.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QWidget, QApplication, QGridLayout, QLabel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QWidget</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        grid = QGridLayout()</span><br><span class=\"line\">        grid.setSpacing(<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        x = <span class=\"number\">0</span></span><br><span class=\"line\">        y = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.text = <span class=\"string\">&quot;x: &#123;0&#125;,  y: &#123;1&#125;&quot;</span>.<span class=\"built_in\">format</span>(x, y)</span><br><span class=\"line\">        <span class=\"comment\">#在一个组件里显示鼠标的X和Y坐标。</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.label = QLabel(<span class=\"string\">&#x27;self.text&#x27;</span>, self)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtWidgets.QLabel(text[, parent=None[, f=Qt.WindowFlags()]])</span></span><br><span class=\"line\"><span class=\"string\">        QLabel用于显示文本或图像。没有提供用户交互功能</span></span><br><span class=\"line\"><span class=\"string\">        Constructs a label that displays the text.</span></span><br><span class=\"line\"><span class=\"string\">        The parent and widget flag f , arguments are passed to the QFrame constructor.</span></span><br><span class=\"line\"><span class=\"string\">        构建一个显示文本的标签，参数中父级和控件标志f会被传递给QFrame构造函数</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        grid.addWidget(self.label, <span class=\"number\">0</span>, <span class=\"number\">0</span>, Qt.AlignTop)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setMouseTracking(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"comment\">#事件追踪默认没有开启，当开启后才会追踪鼠标的点击事件</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.setLayout(grid)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">350</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Event object&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mouseMoveEvent</span>(<span class=\"params\">self, e</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        官方文档中的解释仅一句：Override this to handle mouse move events. 覆盖此操作以处理鼠标移动事件</span></span><br><span class=\"line\"><span class=\"string\">        这里的参数e为事件对象。里面有我们触发事件（鼠标移动）的事件对象。</span></span><br><span class=\"line\"><span class=\"string\">        下面的x()和y()方法可以得到鼠标在窗口中此刻的x和y坐标点，然后拼成字符串输出到QLabel组件里</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        x = e.x()</span><br><span class=\"line\">        y = e.y()</span><br><span class=\"line\"></span><br><span class=\"line\">        text = <span class=\"string\">&quot;x: &#123;0&#125;,  y: &#123;1&#125;&quot;</span>.<span class=\"built_in\">format</span>(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.label.setText(text)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        注意qtcy中以很多个setText函数，这里是：PySide2.QtWidgets.QLabel.setText(arg__1)</span></span><br><span class=\"line\"><span class=\"string\">        Parameters: arg__1 – str</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"事件发送\"><a href=\"#事件发送\" class=\"headerlink\" title=\"事件发送\"></a>事件发送</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：事件发送</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we determine the event sender</span></span><br><span class=\"line\"><span class=\"string\">object.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QMainWindow, QPushButton, QApplication</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QMainWindow</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\"></span><br><span class=\"line\">        btn1 = QPushButton(<span class=\"string\">&quot;Button 1&quot;</span>, self)</span><br><span class=\"line\">        btn1.move(<span class=\"number\">30</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        btn2 = QPushButton(<span class=\"string\">&quot;Button 2&quot;</span>, self)</span><br><span class=\"line\">        btn2.move(<span class=\"number\">150</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        btn1.clicked.connect(self.buttonClicked)            </span><br><span class=\"line\">        btn2.clicked.connect(self.buttonClicked)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.statusBar()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">290</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Event sender&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">buttonClicked</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">        sender = self.sender()</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Returns a pointer to the object that sent the signal, if called in a slot activated by a signal; </span></span><br><span class=\"line\"><span class=\"string\">otherwise(否则) it returns None . The pointer is valid only during the execution(执行) of the slot that calls </span></span><br><span class=\"line\"><span class=\"string\">this function from this object’s thread context.The pointer returned by this function becomes invalid </span></span><br><span class=\"line\"><span class=\"string\">if the sender(发送人) is destroyed, or if the slot is disconnected from the sender’s signal.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">sender()在QT里的原型是QObject::sender(),也就是对象，实例化的对象可以发送信号，返回发送信号的对象的指针，返回类型为QObject *</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.statusBar().showMessage(sender.text() + <span class=\"string\">&#x27; was pressed&#x27;</span>)</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        Returns the object that emitted the signal. 该函数没有参数，返回发送信号的那一个对象</span></span><br><span class=\"line\"><span class=\"string\">        用调用sender()方法的方式决定了事件源。状态栏显示了被点击的按钮.</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"信号发送\"><a href=\"#信号发送\" class=\"headerlink\" title=\"信号发送\"></a>信号发送</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">例子：信号发送</span></span><br><span class=\"line\"><span class=\"string\">ZetCode PyQt5 tutorial </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">In this example, we show how to </span></span><br><span class=\"line\"><span class=\"string\">emit（发射，发送） a custom signal. </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Author: Jan Bodnar</span></span><br><span class=\"line\"><span class=\"string\">Website: zetcode.com </span></span><br><span class=\"line\"><span class=\"string\">Last edited: August 2017</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> pyqtSignal, QObject</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> QMainWindow, QApplication</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Communicate</span>(<span class=\"params\">QObject</span>):</span></span><br><span class=\"line\">    <span class=\"comment\">#创建了一个叫closeApp的信号，这个信号会在鼠标按下的时候触发，事件与QMainWindow绑定。</span></span><br><span class=\"line\">    closeApp = pyqtSignal() </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Example</span>(<span class=\"params\">QMainWindow</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    class PySide2.QtWidgets.QMainWindow([parent=None[, flags=Qt.WindowFlags()]])¶</span></span><br><span class=\"line\"><span class=\"string\">    param parent</span></span><br><span class=\"line\"><span class=\"string\">    PySide2.QtWidgets.QWidget</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    param flags</span></span><br><span class=\"line\"><span class=\"string\">    WindowFlags</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Constructs a QMainWindow with the given parent and the specified widget flags .</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    QMainWindow sets the Window flag itself, and will hence always be created as a top-level widget.</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        self.initUI()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initUI</span>(<span class=\"params\">self</span>):</span>      </span><br><span class=\"line\">        self.c = Communicate()  </span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        Communicate类创建了一个pyqtSignal()属性的信号。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.c.closeApp.connect(self.close)     </span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        PySide2.QtGui.QWindow.close()¶</span></span><br><span class=\"line\"><span class=\"string\">        Return type</span></span><br><span class=\"line\"><span class=\"string\">        bool</span></span><br><span class=\"line\"><span class=\"string\">        功能只有一个Close the window.</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">        self.setGeometry(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">290</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;Emit signal&#x27;</span>)</span><br><span class=\"line\">        self.show()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mousePressEvent</span>(<span class=\"params\">self, event</span>):</span></span><br><span class=\"line\">        event.gg = <span class=\"string\">&#x27;gg&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;event: &quot;</span>,event.__dict__) <span class=\"comment\">#打印对象的全部属性</span></span><br><span class=\"line\">        self.c.closeApp.emit()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    ex = Example()</span><br><span class=\"line\">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2>","text":"PYQT5事件与信号事件根据发布在gitbook网站上的中文博客^1讲解：signals and slots 被其他人翻译成信号和槽机制，(⊙o⊙)…我这里还是不翻译好了。<br>所有的应用都是事件驱动的。事件大部分都是由用户的行为产生的，当然也有其他的事件产生方式，比如网络的连","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":15,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"Python3","slug":"Programming-languages-and-projects/Python3","count":9,"path":"api/categories/Programming-languages-and-projects/Python3.json"},{"name":"PYQT5","slug":"Programming-languages-and-projects/Python3/PYQT5","count":9,"path":"api/categories/Programming-languages-and-projects/Python3/PYQT5.json"}],"tags":[{"name":"python3","slug":"python3","count":9,"path":"api/tags/python3.json"},{"name":"gui","slug":"gui","count":9,"path":"api/tags/gui.json"}]}]}