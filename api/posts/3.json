{"total":22,"pageSize":10,"pageCount":3,"data":[{"title":"typora中的锚点与引用","slug":"Reference","date":"2021-08-29T14:29:42.424Z","updated":"2021-09-02T23:48:45.283Z","comments":true,"path":"api/articles/Reference.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"在markdown编辑器Typora中使用锚点与引用\"><a href=\"#在markdown编辑器Typora中使用锚点与引用\" class=\"headerlink\" title=\"在markdown编辑器Typora中使用锚点与引用\"></a>在markdown编辑器Typora中使用锚点与引用</h1><h2 id=\"点击链接，打开网页，跳转相关url\"><a href=\"#点击链接，打开网页，跳转相关url\" class=\"headerlink\" title=\"点击链接，打开网页，跳转相关url\"></a>点击链接，打开网页，跳转相关url</h2><p>在之前写博客的时候，一直被引用参考文献的问题所困扰，<a href=\"https://markdown.com.cn/basic-syntax/links.html\">Markdown官方语法教程相关页面</a>中给对于引用和链接跳转出了以下的方法，</p>\n<blockquote>\n<h3 id=\"引用类型链接\"><a href=\"#引用类型链接\" class=\"headerlink\" title=\"引用类型链接\"></a>引用类型链接</h3><p>引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。</p>\n<h4 id=\"链接的第一部分格式\"><a href=\"#链接的第一部分格式\" class=\"headerlink\" title=\"# 链接的第一部分格式\"></a><a href=\"https://markdown.com.cn/basic-syntax/links.html#%E9%93%BE%E6%8E%A5%E7%9A%84%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%E6%A0%BC%E5%BC%8F\"># </a>链接的第一部分格式</h4><p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p>\n<p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p>\n<p>以下示例格式对于链接的第一部分效果相同：</p>\n<ul>\n<li><code>[hobbit-hole][1]</code></li>\n<li><code>[hobbit-hole] [1]</code></li>\n</ul>\n<h4 id=\"链接的第二部分格式\"><a href=\"#链接的第二部分格式\" class=\"headerlink\" title=\"# 链接的第二部分格式\"></a><a href=\"https://markdown.com.cn/basic-syntax/links.html#%E9%93%BE%E6%8E%A5%E7%9A%84%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%E6%A0%BC%E5%BC%8F\"># </a>链接的第二部分格式</h4><p>引用类型链接的第二部分使用以下属性设置格式：</p>\n<ol>\n<li>放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如<code>[label]:</code>）。</li>\n<li>链接的URL，可以选择将其括在尖括号中。</li>\n<li>链接的可选标题，可以将其括在双引号，单引号或括号中。</li>\n</ol>\n<p>以下示例格式对于链接的第二部分效果相同：</p>\n<ul>\n<li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</code></li>\n<li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;</code></li>\n<li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#39;Hobbit lifestyles&#39;</code></li>\n<li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</code></li>\n<li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</code></li>\n<li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#39;Hobbit lifestyles&#39;</code></li>\n<li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</code></li>\n</ul>\n<p>可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）。</p>\n</blockquote>\n<p><a href=\"https://www.baidu.com/\" title=\"百度\">此处被“ctrl+鼠标左键”点击后，调用浏览器跳转至百度首页</a></p>\n<p><a href=\"%22%E8%B0%B7%E6%AD%8C%22\">点击此处不能实现跳转</a></p>\n<p><strong>References</strong><br>注意参考文献reference是可数名词</p>\n<p>这种方式适合于带有链接的参考文献，如果想在点击链接后，跳转至markdown文件末尾的脚注中（再进一步决定是否跳转脚注指向的参考文献中的url链接），我们需要采用下面的办法。</p>\n<h3 id=\"实现页内跳转\"><a href=\"#实现页内跳转\" class=\"headerlink\" title=\"实现页内跳转\"></a>实现页内跳转</h3><p>页内跳转：从一篇文章的一个地方（锚点）跳到该篇文章的另一个地方（页内链接）</p>\n<p>一些网上资料中，介绍这样一种markdown文档中实现页面内部跳转的方式：</p>\n<blockquote>\n<p>先定义要跳转的锚点——这一部分放在我们的正文中</p>\n<p><code>&lt;span id=&quot;your_anchor&quot;&gt;在别处点击后，您要跳转到此锚点处&lt;/span&gt;</code></p>\n</blockquote>\n<blockquote>\n<p>然后是定义链接（点击后跳转到对应的锚点）——这一部分通常放在末尾作为参考文献<br><code>[锚点]（#your_anchor）</code></p>\n</blockquote>\n<p>但实际上，在markdown编辑器typora中，这个方式存在缺陷，具体原因为：需要使用<strong>a</strong>标签而不能为其他标签，诸如span，div等，比如下面的例子：</p>\n<p><a href=\"#anchor\">a标签中的文本，“ctrl+左键”可以跳转到锚点</a></p>\n<p><span style=\"color:green\"><a href=\"#anchor\" style=\"text-decoration:none\">在这一个链接中，a标签被嵌套于一个div标签中，也可以跳转到与上面链接一样关联的锚点。同时我们通过设置a标签的style属性来去除此链接的下划线</a></span></p>\n<p><span href=\"#anchoro\">这一个span标签中的链接就没办法跳转了</span></p>\n<p><a href=\"https://support.typora.io/Links/#html-a-tag\">Typora官方文档的此页面</a>中给出了a标签在这种情况下的使用方法：</p>\n<blockquote>\n<h4 id=\"HTML-lt-a-gt-tag\"><a href=\"#HTML-lt-a-gt-tag\" class=\"headerlink\" title=\"HTML &lt;a&gt; tag\"></a>HTML <code>&lt;a&gt;</code> tag</h4><p>You could also use raw HTML to add links, for example</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;http://www.google.com&quot; target=&quot;__blank&quot;&gt;Link to Google&lt;/a&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;a name=&quot;anchor&quot;&gt;&lt;/a&gt; Anchor</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;a href=&quot;#anchor&quot;&gt;Link to Anchor&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<p>For link towards a website, we suggest you <strong>DO NOT ommit URL protocols</strong> like <code>https://</code> or <code>http://</code>, or it may be interpreted as relative link by Typora or other Markdown egines, or after export/publish.</p>\n</blockquote>\n<p><a name=\"anchor\">这里是我们预先定义的锚点</a></p>\n<p>注意，以上这几种方式只能实现单向跳转。如果想要实现word编辑论文中，参考文献式的双向跳转，需要参照<a href=\"https://markdown.com.cn/extended-syntax/footnotes.html\">markdown官方教程中的脚注语法</a><a href=\"%5Bmarkdown%E5%AE%98%E6%96%B9%E6%95%99%E7%A8%8B%E4%B8%AD%E7%9A%84%E8%84%9A%E6%B3%A8%E8%AF%AD%E6%B3%95%5D(https://markdown.com.cn/extended-syntax/footnotes.html)\">^1</a>：</p>\n<blockquote>\n<p>脚注使您可以添加注释和参考，而不会使文档正文混乱。当您创建脚注时，带有脚注的上标数字会出现在您添加脚注参考的位置。读者可以单击链接（在typora编辑器中为”ctrl+左键”）以跳至页面底部的脚注内容。</p>\n<p>要创建脚注参考，请在方括号（<code>[^1]</code>）内添加插入符号和标识符。标识符可以是数字或单词，但不能包含空格或制表符。标识符仅将脚注参考与脚注本身相关联-在输出中，脚注按顺序编号。</p>\n<p>在括号内使用另一个插入符号和数字添加脚注，并用冒号和文本（<code>[^1]: My footnote.</code>）。您不必在文档末尾添加脚注。您可以将它们放在除列表，块引号和表之类的其他元素之外的任何位置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Here&#x27;s a simple footnote,[^1] and here&#x27;s a longer one.[^bignote]</span><br><span class=\"line\"></span><br><span class=\"line\">[^1]: This is the first footnote.</span><br><span class=\"line\"></span><br><span class=\"line\">[^bignote]: Here&#x27;s one with multiple paragraphs and code.</span><br><span class=\"line\"></span><br><span class=\"line\">    Indent paragraphs to include them in the footnote.</span><br><span class=\"line\"></span><br><span class=\"line\">    `&#123; my code &#125;`</span><br><span class=\"line\"></span><br><span class=\"line\">    Add as many paragraphs as you like.</span><br></pre></td></tr></table></figure>\n\n<p>呈现的输出如下所示：</p>\n<p>Here’s a simple footnote,<a href=\"%5Bmarkdown%E5%AE%98%E6%96%B9%E6%95%99%E7%A8%8B%E4%B8%AD%E7%9A%84%E8%84%9A%E6%B3%A8%E8%AF%AD%E6%B3%95%5D(https://markdown.com.cn/extended-syntax/footnotes.html)\">^1</a> and here’s a longer one.[^bignote]</p>\n<p><a href=\"%5Bmarkdown%E5%AE%98%E6%96%B9%E6%95%99%E7%A8%8B%E4%B8%AD%E7%9A%84%E8%84%9A%E6%B3%A8%E8%AF%AD%E6%B3%95%5D(https://markdown.com.cn/extended-syntax/footnotes.html)\">^1</a>: This is the first footnote.<br>[^bignote]: Here’s one with multiple paragraphs and code.</p>\n</blockquote>\n<p>注意，这里末尾的参考文献中，编号为1的脚注之所以有两个箭头指向链接，是因为我们在本篇博客中使用了两个同名为“1”的链接，我们可以从这里看出，脚注具有顺序性。</p>\n<p><strong>一个值得注意的点</strong></p>\n<p>编写作为锚点的位于末尾的参考文献时，如果要附上url链接，格式写作如下形式：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">^anchor</span>]: [<span class=\"string\">文章标题</span>](<span class=\"link\">url</span>) </span><br></pre></td></tr></table></figure>\n\n<p>其中，不仅第二个方括号和冒号之间要空一格，由于**[文本](url)**是markdown的一种链接语法，为了让参考文献也拥有向url跳转的箭头功能，需要在(url)后空一格，箭头才能显现，否则就无法实现双向的跳转。</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2>","text":"在markdown编辑器Typora中使用锚点与引用点击链接，打开网页，跳转相关url在之前写博客的时候，一直被引用参考文献的问题所困扰，Markdown官方语法教程相关页面中给对于引用和链接跳转出了以下的方法，引用类型链接引用样式链接是一种特殊的链接，它使URL在Markdow","link":"","raw":null,"photos":[],"categories":[{"name":"MarkDown","slug":"MarkDown","count":2,"path":"api/categories/MarkDown.json"},{"name":"typora的特殊使用","slug":"MarkDown/typora的特殊使用","count":2,"path":"api/categories/MarkDown/typora的特殊使用.json"}],"tags":[{"name":"markdown","slug":"markdown","count":2,"path":"api/tags/markdown.json"},{"name":"typora","slug":"typora","count":2,"path":"api/tags/typora.json"}]},{"title":"PYQT5介绍","slug":"PYQT5介绍","date":"2021-08-29T14:29:42.423Z","updated":"2021-08-29T14:29:42.423Z","comments":true,"path":"api/articles/PYQT5介绍.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"PYQT5\"><a href=\"#PYQT5\" class=\"headerlink\" title=\"PYQT5\"></a>PYQT5</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>PyQt5 是Digia的一套Qt5应用框架与python的结合，同时支持2.x和3.x。<br>Qt库由Riverbank Computing开发，是最强大的GUI库之一 ，<br>官方网站：<a href=\"https://riverbankcomputing.com/\">https://riverbankcomputing.com/</a><br>PyQt5是由一系列Python模块组成。超过620个类，6000函数和方法。能在诸如Unix、Windows和Mac OS等主流操作系统上运行。PyQt5有两种证书，GPL和商业证书。</p>\n<h3 id=\"PYQT和QT\"><a href=\"#PYQT和QT\" class=\"headerlink\" title=\"PYQT和QT\"></a>PYQT和QT</h3><p>PyQt的介绍，以及其与Qt的不同，可见<a href=\"https://www.riverbankcomputing.com/static/Docs/PyQt5/introduction.html\">官网此页</a></p>\n<p>Qt是一组c++库和开发工具，包括图形用户界面，网络，线程，正则表达式，SQL数据库，SVG, OpenGL, XML，用户和应用程序设置，定位和定位服务，短程通信(NFC和蓝牙)，web浏览，3D动画，图表、3D数据可视化以及与应用商店的交互。PyQt5作为一组Python模块实现了超过1000个这样的类。</p>\n<p>PyQt5是一组来自Qt公司的用于Qt应用程序框架v5的Python绑定，由PyQt5本身和许多与Qt的附加库相对应的附加组件组成。每一个都提供了一个源代码发行版(sdist)和用于Windows、Linux和macOS的二进制轮。<br>PyQt5支持Windows、Linux、UNIX、Android、macOS和iOS平台，需要Python v3.5或更高版本。(PyQt5还应该使用遗留的configure.py构建脚本在Python v2.7和Python v3的早期版本上构建，但这是不支持的。)</p>\n<h2 id=\"PYQT的类别\"><a href=\"#PYQT的类别\" class=\"headerlink\" title=\"PYQT的类别\"></a>PYQT的类别</h2><p>Pyqt的类别分为以下几个模块：</p>\n<ul>\n<li>QtCore:包含了核心的非GUI功能。此模块用于处理时间、文件和目录、各种数据类型、流、URL、MIME类型、线程或进程。</li>\n<li>QtGui包含类窗口系统集成、事件处理、二维图形、基本成像、字体和文本。</li>\n<li>QtWidgets模块包含创造经典桌面风格的用户界面提供了一套UI元素的类。</li>\n<li>QtMultimedia包含的类来处理多媒体内容和API来访问相机和收音机的功能。</li>\n<li>Qtbluetooth模块包含类的扫描设备和连接并与他们互动。描述模块包含了网络编程的类。这些类便于TCP和IP和UDP客户端和服务器的编码，使网络编程更容易和更便携。</li>\n<li>Qtpositioning包含类的利用各种可能的来源，确定位置，包括卫星、Wi-Fi、或一个文本文件。</li>\n<li>Enginio模块实现了客户端库访问Qt云服务托管的应用程序运行时。</li>\n<li>Qtwebsockets模块包含实现WebSocket协议类。</li>\n<li>QtWebKit包含一个基于Webkit2图书馆Web浏览器实现类。</li>\n<li>QtWebkitwidgets包含的类的基础webkit1一用于qtwidgets应用Web浏览器的实现。</li>\n<li>QtXml包含与XML文件的类。这个模块为SAX和DOM API提供了实现。</li>\n<li>QtSvg模块提供了显示SVG文件内容的类。可伸缩矢量图形（SVG）是一种描述二维图形和图形应用的语言。</li>\n<li>QtSql模块提供操作数据库的类。</li>\n<li>QtTest包含的功能，使pyqt5应用程序的单元测试</li>\n</ul>\n<h2 id=\"Pyqt5与Pyside2\"><a href=\"#Pyqt5与Pyside2\" class=\"headerlink\" title=\"Pyqt5与Pyside2\"></a>Pyqt5与Pyside2</h2><p>这里有一篇英文<a href=\"https://www.pythonguis.com/faq/pyqt5-vs-pyside2/\">文章</a>讲述了这两个package之间的区别。简单地说，Pyqt的使用历史比较长，目前中文方面的资料也比较多，Pyside是后续由原先参与Pyqt项目的公司推出的，二者在使用协议方面由不同。<br>在文档方面，Pyqt5与Pyside2大部分函数的构造都相同，详情可见以下网址：<br><a href=\"https://www.riverbankcomputing.com/static/Docs/PyQt5/index.html#\">PyQt5官方文档</a><br><a href=\"https://doc.qt.io/qtforpython-5/\">Pyside2官方文档</a></p>\n<h2 id=\"安装与配置\"><a href=\"#安装与配置\" class=\"headerlink\" title=\"安装与配置\"></a>安装与配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pyqt5</span><br><span class=\"line\"><span class=\"comment\">#使用pip下载该package</span></span><br><span class=\"line\"></span><br><span class=\"line\">pip install pyqt5-tools</span><br><span class=\"line\"><span class=\"comment\">#由于Qt Designer已经在Python3.5版本从PyQt5转移到了tools，因此我们还需要安装pyqt5-tools</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"验证是否成功安装\"><a href=\"#验证是否成功安装\" class=\"headerlink\" title=\"验证是否成功安装\"></a>验证是否成功安装</h2><p>qt designer是PyQt程序UI界面的实现工具，使用Qt Designer可以拖拽、点击完成GUI界面设计，并且设计完成的.ui程序可以转换成.py文件供python程序调用。Qt Designer的设计符合MVC的架构，其实现了视图和逻辑的分离，从而实现了开发的便捷。Qt Designer中的操作方式十分灵活，其通过拖拽的方式放置控件可以随时查看控件效果。Qt Designer生成的.ui文件（实质上是XML格式的文件）也可以通过<code>pyuic5</code>工具转换成.py文件。</p>\n<p>同时按下<code>win</code>+<code>s</code>键，在<code>cornata</code> 中输入<code>designer</code>，可以定位到<code>qt designer</code>程序的地址，成功启动该程序，则说明<code>PyQt5</code>已经被安装。</p>\n<p>另一种方法：在控制台中输入<code>pyuic5</code>，若返回信息为：<code>Error: one input ui-file must be specified</code>，说明 <code>PyQt5</code>已经被成功安装。</p>\n","text":"PYQT5介绍PyQt5 是Digia的一套Qt5应用框架与python的结合，同时支持2.x和3.x。<br>Qt库由Riverbank Computing开发，是最强大的GUI库之一 ，<br>官方网站：https://riverbankcomputing.com/<br>P","link":"","raw":null,"photos":[],"categories":[{"name":"Programming languages and projects","slug":"Programming-languages-and-projects","count":13,"path":"api/categories/Programming-languages-and-projects.json"},{"name":"Python3","slug":"Programming-languages-and-projects/Python3","count":9,"path":"api/categories/Programming-languages-and-projects/Python3.json"},{"name":"PYQT5","slug":"Programming-languages-and-projects/Python3/PYQT5","count":9,"path":"api/categories/Programming-languages-and-projects/Python3/PYQT5.json"}],"tags":[{"name":"python3","slug":"python3","count":9,"path":"api/tags/python3.json"},{"name":"gui","slug":"gui","count":9,"path":"api/tags/gui.json"}]}]}