{"name":"debug","slug":"debug","count":2,"postlist":[{"title":"python旧版本的安装与debug ———— 以scipy1.2.0为例","slug":"python旧版本的安装与debug-————-以scipy1.2.0为例","date":"2021-09-15T13:25:23.482Z","updated":"2021-09-16T02:49:20.725Z","comments":true,"path":"api/articles/python旧版本的安装与debug-————-以scipy1.2.0为例.json","excerpt":"","keywords":null,"cover":"/images/成功的运行结果.png","content":"<h1 id=\"python旧版本的安装与debug-————-以scipy1-2-0为例\"><a href=\"#python旧版本的安装与debug-————-以scipy1-2-0为例\" class=\"headerlink\" title=\"python旧版本的安装与debug ———— 以scipy1.2.0为例\"></a>python旧版本的安装与debug ———— 以scipy1.2.0为例</h1><p>在对照<a href=\"http://www.numpy.org.cn/article/basics/python_numpy_tutorial.html#%E5%AD%90%E5%9B%BE\">numpy中文文档</a>进行学习时，使用pip安装对应的包，启动以下示例代码中的py文件：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy.misc <span class=\"keyword\">import</span> imread, imresize</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = imread(<span class=\"string\">&#x27;assets/cat.jpg&#x27;</span>) <span class=\"comment\">#这里的是一张自定义的资源图片文件</span></span><br><span class=\"line\">img_tinted = img * [<span class=\"number\">1</span>, <span class=\"number\">0.95</span>, <span class=\"number\">0.9</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Show the original image</span></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">plt.imshow(img)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Show the tinted image</span></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># A slight gotcha with imshow is that it might give strange results</span></span><br><span class=\"line\"><span class=\"comment\"># if presented with data that is not uint8. To work around this, we</span></span><br><span class=\"line\"><span class=\"comment\"># explicitly cast the image to uint8 before displaying it.</span></span><br><span class=\"line\">plt.imshow(np.uint8(img_tinted))</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>产生报错如下：<br><code>AttributeError: &#39;module&#39; object has no attribute &#39;imread&#39; </code><br>经过查询相关博客，发现导致该报错的原因在于，从1.3版本开始，imread等几个经典方法已经从scipy包的misc模块中移除。<br>那么，既然找到问题，我们就要寻求解决的方法，目前发现了以下三个：</p>\n<ol>\n<li>安装imageio库<a href=\"https://blog.csdn.net/sky_9900/article/details/98171702\">https://blog.csdn.net/sky_9900/article/details/98171702</a></li>\n<li>安装pillow库<a href=\"https://www.dovov.com/scipy-miscimread.html\">https://www.dovov.com/scipy-miscimread.html</a></li>\n<li><strong>使用1.2版本的scipy包，当我们遇到其他类似情况时，也可以寻求使用旧版本的包</strong></li>\n</ol>\n<h2 id=\"容易掉坑的点\"><a href=\"#容易掉坑的点\" class=\"headerlink\" title=\"容易掉坑的点\"></a>容易掉坑的点</h2><p>第一个，就是python的编辑器版本，<br>我下的时候没有注意，直接下的最新的版本3.9</p>\n<p>结果，当我直接在cmd中使用命令<code>pip install scipy==1.2.0</code>时，直接弹出一大堆报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR: Command errored out with <span class=\"built_in\">exit</span> status 1:</span><br><span class=\"line\">... <span class=\"comment\">#（下面还有很多行，但与解决问题无关紧要）</span></span><br></pre></td></tr></table></figure>\n<p>接着，我尝试着从<a href=\"https://pypi.org/project/scipy/1.2.0/#files\">pypi.org</a>中下载旧版本的whl文件去进行安装，这一次给出的报错信息明显让我意识到了编辑器版本的不匹配：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E:\\&gt;pip install scipy-1.2.0-cp37-cp37m-win_amd64.whl</span><br><span class=\"line\">WARNING: Ignoring invalid distribution -ip (e:\\python\\lib\\site-packages)</span><br><span class=\"line\">WARNING: Ignoring invalid distribution -ip (e:\\python\\lib\\site-packages)</span><br><span class=\"line\">ERROR: scipy-1.2.0-cp37-cp37m-win_amd64.whl is not a supported wheel on this platform.</span><br><span class=\"line\">WARNING: Ignoring invalid distribution -ip (e:\\python\\lib\\site-packages)</span><br><span class=\"line\">WARNING: Ignoring invalid distribution -ip (e:\\python\\lib\\site-packages)</span><br></pre></td></tr></table></figure>\n<p>（事实证明，pypi.org比很多包的官网有用，含有的包版本也更多，比如<a href=\"https://docs.scipy.org/doc/scipy/reference/release.html\">scipy官网</a>）</p>\n<p>从pypi.org上查找到的scipy1.2版本适用的编辑器最高版本为cp37，所幸我电脑上之前用conda安装了对应版本的python，不必经过配置，在vs code中点击左下角，切换python编辑器环境为3.7。<br>![Switch](/images/在vs code左下角切换环境.png)<br>然后我们启动代码，成功跑通！<br><img src=\"/images/成功的运行结果.png\"></p>\n<h2 id=\"附：几种python包指定版本的安装方式\"><a href=\"#附：几种python包指定版本的安装方式\" class=\"headerlink\" title=\"附：几种python包指定版本的安装方式\"></a>附：几种python包指定版本的安装方式</h2><ol>\n<li>pip 安装</li>\n<li>whl文件下载安装</li>\n<li>tar.gz文件下载安装</li>\n<li>conda下载安装<br>conda 下载安装whl文件<br>conda 下载安装tar.gz文件<h2 id=\"附：几个常用的python包下载网站\"><a href=\"#附：几个常用的python包下载网站\" class=\"headerlink\" title=\"附：几个常用的python包下载网站\"></a>附：几个常用的python包下载网站</h2></li>\n<li><a href=\"https://pypi.org/\">https://pypi.org/</a></li>\n<li><a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></li>\n</ol>\n","text":"python旧版本的安装与debug ———— 以scipy1.2.0为例在对照numpy中文文档进行学习时，使用pip安装对应的包，启动以下示例代码中的py文件：1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>1","link":"","raw":null,"photos":[],"categories":[{"name":"Data analysis","slug":"Data-analysis","count":2,"path":"api/categories/Data-analysis.json"}],"tags":[{"name":"数据分析","slug":"数据分析","count":2,"path":"api/tags/数据分析.json"},{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"},{"name":"debug","slug":"debug","count":2,"path":"api/tags/debug.json"},{"name":"package","slug":"package","count":2,"path":"api/tags/package.json"},{"name":"scipy","slug":"scipy","count":2,"path":"api/tags/scipy.json"}]},{"title":"scipy版本的一些废弃方法及解决方案","slug":"scipy版本的一些废弃方法及解决方案","date":"2021-09-16T02:40:00.811Z","updated":"2021-09-16T09:30:55.280Z","comments":true,"path":"api/articles/scipy版本的一些废弃方法及解决方案.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"scipy版本的一些废弃方法及解决方案\"><a href=\"#scipy版本的一些废弃方法及解决方案\" class=\"headerlink\" title=\"scipy版本的一些废弃方法及解决方案\"></a>scipy版本的一些废弃方法及解决方案</h1><p>在之前我们为了解决scipy版本的问题，在python的cp37环境中下载了scipy的1.2.0版本。</p>\n<p>今天，跟着numpy官方文档中的scipy章节敲代码时，发现了scipy版本废弃方法的相关bug。</p>\n<p>文档中的示例代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy.misc <span class=\"keyword\">import</span> imread, imsave, imresize</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Read an JPEG image into a numpy array</span></span><br><span class=\"line\">img = imread(<span class=\"string\">&#x27;assets/cat.jpg&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img.dtype, img.shape)  <span class=\"comment\"># Prints &quot;uint8 (400, 248, 3)&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># We can tint the image by scaling each of the color channels</span></span><br><span class=\"line\"><span class=\"comment\"># by a different scalar constant. The image has shape (400, 248, 3);</span></span><br><span class=\"line\"><span class=\"comment\"># we multiply it by the array [1, 0.95, 0.9] of shape (3,);</span></span><br><span class=\"line\"><span class=\"comment\"># numpy broadcasting means that this leaves the red channel unchanged,</span></span><br><span class=\"line\"><span class=\"comment\"># and multiplies the green and blue channels by 0.95 and 0.9</span></span><br><span class=\"line\"><span class=\"comment\"># respectively.</span></span><br><span class=\"line\">img_tinted = img * [<span class=\"number\">1</span>, <span class=\"number\">0.95</span>, <span class=\"number\">0.9</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Resize the tinted image to be 300 by 300 pixels.</span></span><br><span class=\"line\">img_tinted = imresize(img_tinted, (<span class=\"number\">300</span>, <span class=\"number\">300</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Write the tinted image back to disk</span></span><br><span class=\"line\">imsave(<span class=\"string\">&#x27;assets/cat_tinted.jpg&#x27;</span>, img_tinted)</span><br></pre></td></tr></table></figure>\n\n<p>运行后，会产生以下几个报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS E:\\python练习\\Numpy练习&gt; &amp; C:/Users/Ryan/Anaconda3/python.exe e:/python练习/Numpy练习/python中的Scipy.py        </span><br><span class=\"line\">e:/python练习/Numpy练习/python中的Scipy.py:13: DeprecationWarning:     `imread` is deprecated!</span><br><span class=\"line\">    `imread` is deprecated <span class=\"keyword\">in</span> SciPy 1.0.0, and will be removed <span class=\"keyword\">in</span> 1.2.0.</span><br><span class=\"line\">    Use ``imageio.imread`` instead.</span><br><span class=\"line\">  img = imread(<span class=\"string\">&#x27;assets/cat.jpg&#x27;</span>)</span><br><span class=\"line\">uint8 (400, 248, 3)</span><br><span class=\"line\">    `imresize` is deprecated <span class=\"keyword\">in</span> SciPy 1.0.0, and will be removed <span class=\"keyword\">in</span> 1.3.0.</span><br><span class=\"line\">    Use Pillow instead: ``numpy.array(Image.fromarray(arr).resize())``.</span><br><span class=\"line\">  img_tinted = imresize(img_tinted, (300, 300))</span><br><span class=\"line\">e:/python练习/Numpy练习/python中的Scipy.py:28: DeprecationWarning:     `imsave` is deprecated!</span><br><span class=\"line\">    `imsave` is deprecated <span class=\"keyword\">in</span> SciPy 1.0.0, and will be removed <span class=\"keyword\">in</span> 1.2.0.</span><br><span class=\"line\">    Use ``imageio.imwrite`` instead.</span><br></pre></td></tr></table></figure>\n<p>大概意思就是，scipy.misc模块中的imsave，imresize，imread这几个方法在scipy包的1.0版本中就已被弃用（deprecated）。为了实现该方法的功能，我们可以用报错信息中提示的几个方法来代替。</p>\n<h2 id=\"1-从PIL包中引入Image模块，来取代imresize方法：\"><a href=\"#1-从PIL包中引入Image模块，来取代imresize方法：\" class=\"headerlink\" title=\"1. 从PIL包中引入Image模块，来取代imresize方法：\"></a>1. 从PIL包中引入Image模块，来取代imresize方法：</h2><p><a href=\"https://stackoverflow.com/questions/56167132/warning-imresize-is-deprecated-in-scipy-1-14-3\">stackoverflow上的这一个问题</a>给出了 <a href=\"https://docs.scipy.org/doc/scipy-1.2.1/reference/generated/scipy.misc.imresize.html\">scipy.misc.imresize 的官方文档</a>方面对此方法弃用的解释：</p>\n<blockquote>\n<p><a href=\"https://docs.scipy.org/doc/scipy-1.2.1/reference/generated/scipy.misc.imresize.html#scipy.misc.imresize\"><code>imresize</code></a> is deprecated! <a href=\"https://docs.scipy.org/doc/scipy-1.2.1/reference/generated/scipy.misc.imresize.html#scipy.misc.imresize\"><code>imresize</code></a> is deprecated in SciPy 1.0.0, and will be removed in 1.3.0. Use Pillow instead: <code>numpy.array(Image.fromarray(arr).resize())</code>.</p>\n<blockquote>\n<p>Resize an image.</p>\n<p>This function is only available if Python Imaging Library (PIL) is installed.</p>\n<p>Warning</p>\n<p>This function uses <a href=\"https://docs.scipy.org/doc/scipy-1.2.1/reference/generated/scipy.misc.bytescale.html#scipy.misc.bytescale\"><code>bytescale</code></a> under the hood to rescale images to use the full (0, 255) range if <code>mode</code> is one of <code>None, &#39;L&#39;, &#39;P&#39;, &#39;l&#39;</code>. It will also cast data for 2-D images to <code>uint32</code> for <code>mode=None</code> (which is the default).</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Parameters:</th>\n<th><strong>arr</strong> : ndarrayThe array of image to be resized.size : int, float or tupleint - Percentage of current size.float - Fraction of current size.tuple - Size of the output image (height, width).interp : str, optionalInterpolation to use for re-sizing (‘nearest’, ‘lanczos’, ‘bilinear’, ‘bicubic’ or ‘cubic’).mode : str, optionalThe PIL image mode (‘P’, ‘L’, etc.) to convert <em>arr</em> before resizing. If <code>mode=None</code> (the default), 2-D images will be treated like <code>mode=&#39;L&#39;</code>, i.e. casting to long integer. For 3-D and 4-D arrays, <em>mode</em> will be set to <code>&#39;RGB&#39;</code> and <code>&#39;RGBA&#39;</code> respectively.</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Returns:</td>\n<td><strong>imresize</strong> : ndarrayThe resized array of image.</td>\n</tr>\n</tbody></table>\n</blockquote>\n<h2 id=\"2-从imageio包中使用相关方法替代imsave和imread\"><a href=\"#2-从imageio包中使用相关方法替代imsave和imread\" class=\"headerlink\" title=\"2. 从imageio包中使用相关方法替代imsave和imread\"></a>2. 从imageio包中使用相关方法替代imsave和imread</h2><p><a href=\"https://imageio.readthedocs.io/en/stable/scipy.html?highlight=scipy#transitioning-from-scipy-s-imread\">imageio的官方文档</a>中，就有代替scipy.misc的相关说明：</p>\n<blockquote>\n<h1 id=\"Transitioning-from-Scipy’s-imread\"><a href=\"#Transitioning-from-Scipy’s-imread\" class=\"headerlink\" title=\"Transitioning from Scipy’s imread\"></a>Transitioning from <strong>Scipy</strong>’s imread</h1><p><strong>Scipy</strong> is <a href=\"https://scipy.github.io/devdocs/release.1.0.0.html#backwards-incompatible-changes\">deprecating</a> their image I/O functionality.</p>\n<p>This document is intended to help people coming from <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.misc.imread.html\"><strong>Scipy</strong></a> to adapt to Imageio’s <a href=\"https://imageio.readthedocs.io/en/stable/userapi.html#imageio.imread\"><code>imread</code></a> function. We recommend reading the <a href=\"https://imageio.readthedocs.io/en/stable/userapi.html\">user api</a> and checkout some <a href=\"https://imageio.readthedocs.io/en/stable/examples.html\">examples</a> to get a feel of imageio.</p>\n<p>Imageio makes use of variety of plugins to support reading images (and volumes/movies) from many different formats. Fortunately, Pillow is the main plugin for common images, which is the same library as used by <strong>Scipy</strong>’s <code>imread</code>. Note that Imageio automatically selects a plugin based on the image to read (unless a format is explicitly specified), but uses Pillow where possible.</p>\n<p>In short terms: For images previously read by <strong>Scipy</strong>’s imread, imageio should generally use Pillow as well, and imageio provides the same functionality as Scipy in these cases. But keep in mind:</p>\n<blockquote>\n<ul>\n<li>Instead of <code>mode</code>, use the <code>pilmode</code> keyword argument.</li>\n<li>Instead of <code>flatten</code>, use the <code>as_gray</code> keyword argument.</li>\n<li>The documentation for the above arguments is not on <a href=\"https://imageio.readthedocs.io/en/stable/userapi.html#imageio.imread\"><code>imread</code></a>, but on the docs of the individual formats, e.g. <a href=\"https://imageio.readthedocs.io/en/stable/format_png-pil.html\">PNG</a>.</li>\n<li>Imageio’s functions all return numpy arrays, albeit as a subclass (so that meta data can be attached).</li>\n</ul>\n</blockquote>\n</blockquote>\n<p>我们使用imageio.imread和imageio.write分别代替scipy.misc中的imread和imsave两个方法，成功解决问题。</p>\n<h2 id=\"3-PIL包的作用\"><a href=\"#3-PIL包的作用\" class=\"headerlink\" title=\"3. PIL包的作用\"></a>3. PIL包的作用</h2><p><a href=\"https://www.liaoxuefeng.com/wiki/1016959663602400/1017785454949568\">廖雪峰的官方网站</a>中关于pillow这一个常用第三方模块的介绍是：</p>\n<blockquote>\n<p>PIL：Python Imaging Library，已经是Python平台事实上的图像处理标准库了。PIL功能非常强大，但API却非常简单易用。</p>\n<p>由于PIL仅支持到Python 2.7，加上年久失修，于是一群志愿者在PIL的基础上创建了兼容的版本，名字叫<a href=\"https://github.com/python-pillow/Pillow\">Pillow</a>，支持最新Python 3.x，又加入了许多新特性，因此，我们可以直接安装使用Pillow。</p>\n<p>若已经安装anaconda，则无需使用pip安装Pillow包了。</p>\n</blockquote>\n<p>对于这一个库的学习，在以后我们会继续探讨</p>\n<p>改正后，我们的代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: UTF-8 –*-</span></span><br><span class=\"line\"><span class=\"comment\"># 上面这一行是python头文件的声明</span></span><br><span class=\"line\"><span class=\"comment\"># 缺省情况下程序需要用ascii码书写，但如果其中写中文的话，python解释器会报错</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> imageio</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy </span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">直接使用pip安装misc会报错 ImportError:cannot import name &#x27;imread&#x27; from &#x27;scipy.misc&#x27;</span></span><br><span class=\"line\"><span class=\"string\">原因在于包的版本问题，新版本的scipy.misc没有这一个方法</span></span><br><span class=\"line\"><span class=\"string\">为了对照文档，我们卸载并重新安装：pip3 install scipy==1.2.0</span></span><br><span class=\"line\"><span class=\"string\">但是依然无法解决问题，发现是我们下错版本了，要用1.0的才行，不过我们不会管这个问题了，</span></span><br><span class=\"line\"><span class=\"string\">因为我们使用imageio和PIL来作为解决方案，详见我的个人博客</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Read an JPEG image into a numpy array</span></span><br><span class=\"line\">img = imageio.imread(<span class=\"string\">&#x27;assets/cat.jpg&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img.dtype, img.shape)  <span class=\"comment\"># Prints &quot;uint8 (400, 248, 3)&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># We can tint the image by scaling each of the color channels</span></span><br><span class=\"line\"><span class=\"comment\"># by a different scalar constant. The image has shape (400, 248, 3);</span></span><br><span class=\"line\"><span class=\"comment\"># we multiply it by the array [1, 0.95, 0.9] of shape (3,);</span></span><br><span class=\"line\"><span class=\"comment\"># numpy broadcasting means that this leaves the red channel unchanged,</span></span><br><span class=\"line\"><span class=\"comment\"># and multiplies the green and blue channels by 0.95 and 0.9</span></span><br><span class=\"line\"><span class=\"comment\"># respectively.</span></span><br><span class=\"line\">img_tinted = img * [<span class=\"number\">1</span>, <span class=\"number\">0.95</span>, <span class=\"number\">0.9</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Resize the tinted image to be 300 by 300 pixels.</span></span><br><span class=\"line\">img_tinted = numpy.array(Image.fromarray(img).resize((<span class=\"number\">300</span>,<span class=\"number\">300</span>)))</span><br><span class=\"line\"><span class=\"comment\">#成功将图片保存</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Write the tinted image back to disk</span></span><br><span class=\"line\">imageio.imwrite(<span class=\"string\">&#x27;assets/cat_tinted.jpg&#x27;</span>, img_tinted)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>成功运行！</p>\n","text":"scipy版本的一些废弃方法及解决方案在之前我们为了解决scipy版本的问题，在python的cp37环境中下载了scipy的1.2.0版本。今天，跟着numpy官方文档中的scipy章节敲代码时，发现了scipy版本废弃方法的相关bug。文档中的示例代码如下：1<br>2<br","link":"","raw":null,"photos":[],"categories":[{"name":"Data analysis","slug":"Data-analysis","count":2,"path":"api/categories/Data-analysis.json"}],"tags":[{"name":"数据分析","slug":"数据分析","count":2,"path":"api/tags/数据分析.json"},{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"},{"name":"debug","slug":"debug","count":2,"path":"api/tags/debug.json"},{"name":"package","slug":"package","count":2,"path":"api/tags/package.json"},{"name":"scipy","slug":"scipy","count":2,"path":"api/tags/scipy.json"}]}]}