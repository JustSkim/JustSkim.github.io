{"name":"git","slug":"git","count":1,"postlist":[{"title":"Git第一次与远程仓库关联并push时的报错","slug":"Git第一次与远程仓库关联并push时的报错","date":"2021-09-02T23:32:48.083Z","updated":"2021-09-02T23:51:18.357Z","comments":true,"path":"api/articles/Git第一次与远程仓库关联并push时的报错.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Git第一次与远程仓库关联并push时的报错\"><a href=\"#Git第一次与远程仓库关联并push时的报错\" class=\"headerlink\" title=\"Git第一次与远程仓库关联并push时的报错\"></a>Git第一次与远程仓库关联并push时的报错</h1><h2 id=\"关于该debug的过程描述\"><a href=\"#关于该debug的过程描述\" class=\"headerlink\" title=\"关于该debug的过程描述\"></a>关于该debug的过程描述</h2><p>当我们在github建立一个远程仓库时，github会给予我们相应的quick start提示：</p>\n<blockquote>\n<h3 id=\"…or-create-a-new-repository-on-the-command-line\"><a href=\"#…or-create-a-new-repository-on-the-command-line\" class=\"headerlink\" title=\"…or create a new repository on the command line\"></a>…or create a new repository on the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;# ejs_express_demo&quot; &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin https://github.com/JustSkim/ejs_express_demo.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n<h3 id=\"…or-push-an-existing-repository-from-the-command-line\"><a href=\"#…or-push-an-existing-repository-from-the-command-line\" class=\"headerlink\" title=\"…or push an existing repository from the command line\"></a>…or push an existing repository from the command line</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/JustSkim/ejs_express_demo.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n<h3 id=\"…or-import-code-from-another-repository\"><a href=\"#…or-import-code-from-another-repository\" class=\"headerlink\" title=\"…or import code from another repository\"></a>…or import code from another repository</h3><p>You can initialize this repository with code from a Subversion, Mercurial, or TFS project.<br><a href=\"https://github.com//ejs_express_demo/import\">Import code</a></p>\n</blockquote>\n<blockquote>\n<p>$ git init<br>Initialized empty Git repository in E:/JS练习/ejs_demo/.git/</p>\n</blockquote>\n<p>首先，创建一个 Git 仓库</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git commit -m “no useful file first commit”<br>On branch master<br>Initial commit<br>Untracked files:<br>     .gitignore<br>    package.json</p>\n<p>   nothing added to commit but untracked files present</p>\n</blockquote>\n<p>然后，提交暂存区到本地仓库。<br>事实上，我们第一次使用在该文件夹中使用该git commit命令出现了差错：<br>**Untracked files  … nothing added to commit but untracked files present **<br>一般而言，第一次执行提交暂存区到本地仓库的操作，如果使用<code>git commit -m &quot;description&quot;</code> 而不是<code>git commit -a -m &quot;description&quot;</code>，是不会出现该错误的[^1]。</p>\n<p>对于我们这种情况，出现该差错的原因在于：在我们每次使用 git commit 命令之前，<br>使用 git add 跟踪一个文件，并且将其纳入暂存区。git add使用文件或者目录作为参数，如果参数是目录，那么会递归地跟踪该目录下左右文件（为”.”，则跟踪目录下所有未被.gitignore排除的文件）[^2]。</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$git remote add origin <a href=\"mailto:&#x67;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;\">&#x67;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#x6f;&#x6d;</a>:JustSkim/ejs_express_demo.git</p>\n</blockquote>\n<p>添加名为origind 远程版本库：</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git push -u origin main<br>error: src refspec main does not match any.<br>error: failed to push some refs to ‘<a href=\"mailto:&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#109;\">&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#99;&#x6f;&#109;</a>:JustSkim/ejs_express_demo.git’</p>\n</blockquote>\n<p>这里push失败，我们尝试改为https的连接方式（事实证明这对于解决问题是起不到帮助的）<br>（但是当网络环境差导致多次Push失败时，建议更改连接方式）</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git remote set-url origin <a href=\"https://github.com/JustSkim/ejs_express_demo.git\">https://github.com/JustSkim/ejs_express_demo.git</a></p>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git push -u origin master<br>error: src refspec master does not match any.<br>error: failed to push some refs to ‘<a href=\"https://github.com/JustSkim/ejs_express_demo.git&#39;\">https://github.com/JustSkim/ejs_express_demo.git&#39;</a></p>\n</blockquote>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git branch -a</p>\n</blockquote>\n<p>由于之前的错误，存在未被跟踪的文件导致提交失败，因此在这里，无论使用命令“git branch”还是”git branch -a“，都没有列出任何分支</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git add .<br>warning: LF will be replaced by CRLF in package.json.<br>The file will have its original line endings in your working directory.</p>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git log<br>fatal: your current branch ‘master’ does not have any commits yet</p>\n</blockquote>\n<p>我们重新跟踪文件<br>这里日志提示我们 ”该master分支下至今没有任何提交“</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git commit -m “no file”<br>[master (root-commit) 7bbefea] no file<br>warning: LF will be replaced by CRLF in package.json.<br>The file will have its original line endings in your working directory.<br>2 files changed, 16 insertions(+)<br>create mode 100644 .gitignore<br>create mode 100644 package.json</p>\n</blockquote>\n<p>好了，这一次我们提交成功了</p>\n<blockquote>\n<p>User@TAPTOP-N6POI72B MNIWG19 /e/JS练习/ejs_demo (master)<br>$ git branch<br>*master</p>\n</blockquote>\n<p>可以看到master分支存在</p>\n<blockquote>\n<p>User@TAPTOP-N5PIO<br>$ git push origin master<br>Counting objects: 4, done.<br>Delta compression using up to 16 threads.<br>Compressing objects: 100% (3/3), done.<br>Writing objects: 100% (4/4), 445 bytes | 0 bytes/s, done.<br>Total 4 (delta 0), reused 0 (delta 0)<br>To <a href=\"https://github.com/JustSkim/ejs_express_demo.git\">https://github.com/JustSkim/ejs_express_demo.git</a></p>\n<ul>\n<li>[new branch]      master -&gt; master</li>\n</ul>\n</blockquote>\n<p>代码成功推送到远程仓库</p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p>[^1]: <a href=\"https://www.jianshu.com/p/61c3db30d488\">git commit -a -m “提交报错”</a><br>[^2]: <a href=\"https://www.jianshu.com/p/4d642a42414a\">git提交报错nothing added to commit but untracked files present</a>  </p>\n","text":"Git第一次与远程仓库关联并push时的报错关于该debug的过程描述当我们在github建立一个远程仓库时，github会给予我们相应的quick start提示：…or create a new repository on the command line1<br>2<br>","link":"","raw":null,"photos":[],"categories":[{"name":"Git","slug":"Git","count":1,"path":"api/categories/Git.json"},{"name":"Git报错处理","slug":"Git/Git报错处理","count":1,"path":"api/categories/Git/Git报错处理.json"}],"tags":[{"name":"git","slug":"git","count":1,"path":"api/tags/git.json"}]}]}